{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///shuffle.min.js","webpack:///webpack/bootstrap 266729409fbade64ed21","webpack:///./src/index.js","webpack:///./src/shuffle.js","webpack:///./~/custom-event-polyfill/custom-event-polyfill.js","webpack:///./~/matches-selector/index.js","webpack:///./~/array-uniq/index.js","webpack:///./~/xtend/immutable.js","webpack:///./~/throttleit/index.js","webpack:///./~/array-parallel/index.js","webpack:///./src/point.js","webpack:///./src/get-number.js","webpack:///./src/shuffle-item.js","webpack:///./src/classes.js","webpack:///./src/get-number-style.js","webpack:///./src/computed-size.js","webpack:///./src/sorter.js","webpack:///./src/on-transition-end.js","webpack:///./src/layout.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","toArray","arrayLike","Array","prototype","slice","arrayMax","array","Math","max","apply","arrayIncludes","arguments","length","indexOf","Object","defineProperty","value","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","_matchesSelector","_matchesSelector2","_arrayUniq","_arrayUniq2","_xtend","_xtend2","_throttleit","_throttleit2","_arrayParallel","_arrayParallel2","_point","_point2","_shuffleItem","_shuffleItem2","_classes","_classes2","_getNumberStyle","_getNumberStyle2","_sorter","_sorter2","_onTransitionEnd","_layout2","Shuffle","element","options","undefined","useSizer","lastSort","group","lastFilter","ALL_ITEMS","isEnabled","isDestroyed","isInitialized","_transitions","isTransitioning","_queue","_getElementOption","_init","items","_getItems","sizer","classList","add","Classes","BASE","_initItems","_onResize","_getResizeFunction","window","addEventListener","containerCss","getComputedStyle","containerWidth","getSize","width","_validateStyles","_setColumns","filter","initialSort","offsetWidth","_setTransitions","style","transition","speed","easing","resizeFunction","_handleResize","bind","throttle","throttleTime","option","querySelector","nodeType","jquery","styles","position","overflow","category","collection","set","_getFilteredSets","_toggleFilterClasses","_this","visible","hidden","forEach","item","_doesPassFilter","push","attr","getAttribute","FILTER_ATTRIBUTE_KEY","keys","delimeter","split","JSON","parse","isArray","some","_ref","show","hide","init","dispose","visibleItems","_getFilteredItems","str","useTransforms","_this2","children","el","itemSelector","map","by","isVisible","gutterSize","size","columnWidth","gutterWidth","gutter","_getGutterSize","_getColumnSize","calculatedColumns","abs","round","columnThreshold","cols","floor","colWidth","height","_getContainerSize","positions","index","min","staggerAmount","staggerAmountMax","name","details","shuffle","dispatchEvent","CustomEvent","bubbles","cancelable","detail","_this3","count","callback","transitionDelay","applyCss","Css","VISIBLE","after","currPos","point","currScale","scale","itemSize","pos","_getItemPosition","equals","Scale","before","_getStaggerAmount","getItemPosition","gridSize","total","threshold","buffer","_this4","_getConcealedItems","HIDDEN","update","_ref2","x","y","transform","left","top","itemCallback","done","onTransitionEnd","evt","opts","_this5","_getStylesForTransition","_whenTransitionDone","_cancelMovement","hasSpeed","hasQueue","_startTransitions","_styleImmediately","_dispatchLayout","transitions","_this6","callbacks","_getTransitionFunction","_movementFinished","cancelTransitionEnd","objects","_this7","elements","_skipTransitions","_dispatch","EventType","LAYOUT","sortObj","_filter","_shrink","_updateItemCount","sort","_resetCols","showHidden","concealed","_layout","_processQueue","_setContainerSize","isOnlyLayout","newItems","concat","_updateItemsOrder","isUpdateLayout","_this8","oldItems","getItemByElement","handleLayout","removeEventListener","_disposeItems","parentNode","removeChild","REMOVED","remove","removeAttribute","includeMargins","marginLeft","marginRight","marginTop","marginBottom","zero","data","duration","transitionDuration","delay","ShuffleItem","__Point","__sorter","__getColumnSpan","getColumnSpan","__getAvailablePositions","getAvailablePositions","__getShortColumn","getShortColumn","ce","preventDefault","defaultPrevented","Error","e","event","params","origPrevent","document","createEvent","initCustomEvent","get","Event","match","selector","vendor","nodes","querySelectorAll","proto","Element","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","global","uniqNoSet","arr","ret","uniqSet","seen","Set","has","uniqSetWithForEach","doesForEachActuallyWork","extend","source","hasOwnProperty","func","wait","timeoutID","last","Date","rtn","ctx","args","delta","setTimeout","noop","fns","context","maybeDone","err","result","finished","results","pending","fn","_getNumber","_getNumber2","Point","a","b","getNumber","parseFloat","addClasses","SHUFFLE_ITEM","INITIAL","classes","className","removeClasses","visibility","will-change","opacity","getNumberStyle","_computedSize2","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","_computedSize","body","documentElement","createElement","cssText","appendChild","randomize","tmp","current","random","sorter","defaults","original","revert","valA","valB","reverse","uniqueId","eventName","listener","currentTarget","arrayMin","span","setY","shortColumnIndex","setHeight","itemWidth","columns","columnSpan","ceil","available","minPosition","len"],"mappings":"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","file":"shuffle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"shuffle\"] = factory();\n\telse\n\t\troot[\"shuffle\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"shuffle\"] = factory();\n\telse\n\t\troot[\"shuffle\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(1).default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(2);\n\t\n\tvar _matchesSelector = __webpack_require__(3);\n\t\n\tvar _matchesSelector2 = _interopRequireDefault(_matchesSelector);\n\t\n\tvar _arrayUniq = __webpack_require__(4);\n\t\n\tvar _arrayUniq2 = _interopRequireDefault(_arrayUniq);\n\t\n\tvar _xtend = __webpack_require__(5);\n\t\n\tvar _xtend2 = _interopRequireDefault(_xtend);\n\t\n\tvar _throttleit = __webpack_require__(6);\n\t\n\tvar _throttleit2 = _interopRequireDefault(_throttleit);\n\t\n\tvar _arrayParallel = __webpack_require__(7);\n\t\n\tvar _arrayParallel2 = _interopRequireDefault(_arrayParallel);\n\t\n\tvar _point = __webpack_require__(8);\n\t\n\tvar _point2 = _interopRequireDefault(_point);\n\t\n\tvar _shuffleItem = __webpack_require__(10);\n\t\n\tvar _shuffleItem2 = _interopRequireDefault(_shuffleItem);\n\t\n\tvar _classes = __webpack_require__(11);\n\t\n\tvar _classes2 = _interopRequireDefault(_classes);\n\t\n\tvar _getNumberStyle = __webpack_require__(12);\n\t\n\tvar _getNumberStyle2 = _interopRequireDefault(_getNumberStyle);\n\t\n\tvar _sorter = __webpack_require__(14);\n\t\n\tvar _sorter2 = _interopRequireDefault(_sorter);\n\t\n\tvar _onTransitionEnd = __webpack_require__(15);\n\t\n\tvar _layout2 = __webpack_require__(16);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction toArray(arrayLike) {\n\t  return Array.prototype.slice.call(arrayLike);\n\t}\n\t\n\tfunction arrayMax(array) {\n\t  return Math.max.apply(Math, array);\n\t}\n\t\n\tfunction arrayIncludes(array, obj) {\n\t  if (arguments.length === 2) {\n\t    return arrayIncludes(array)(obj);\n\t  }\n\t\n\t  return function (obj) {\n\t    return array.indexOf(obj) > -1;\n\t  };\n\t}\n\t\n\t// Used for unique instance variables\n\tvar id = 0;\n\t\n\tvar Shuffle = function () {\n\t\n\t  /**\r\n\t   * Categorize, sort, and filter a responsive grid of items.\r\n\t   *\r\n\t   * @param {Element} element An element which is the parent container for the grid items.\r\n\t   * @param {Object} [options=Shuffle.options] Options object.\r\n\t   * @constructor\r\n\t   */\n\t  function Shuffle(element) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    _classCallCheck(this, Shuffle);\n\t\n\t    this.options = (0, _xtend2.default)(Shuffle.options, options);\n\t\n\t    this.useSizer = false;\n\t    this.lastSort = {};\n\t    this.group = this.lastFilter = Shuffle.ALL_ITEMS;\n\t    this.isEnabled = true;\n\t    this.isDestroyed = false;\n\t    this.isInitialized = false;\n\t    this._transitions = [];\n\t    this.isTransitioning = false;\n\t    this._queue = [];\n\t\n\t    element = this._getElementOption(element);\n\t\n\t    if (!element) {\n\t      throw new TypeError('Shuffle needs to be initialized with an element.');\n\t    }\n\t\n\t    this.element = element;\n\t    this.id = 'shuffle_' + id++;\n\t\n\t    this._init();\n\t    this.isInitialized = true;\n\t  }\n\t\n\t  _createClass(Shuffle, [{\n\t    key: '_init',\n\t    value: function _init() {\n\t      this.items = this._getItems();\n\t\n\t      this.options.sizer = this._getElementOption(this.options.sizer);\n\t\n\t      if (this.options.sizer) {\n\t        this.useSizer = true;\n\t      }\n\t\n\t      // Add class and invalidate styles\n\t      this.element.classList.add(Shuffle.Classes.BASE);\n\t\n\t      // Set initial css for each item\n\t      this._initItems();\n\t\n\t      // Bind resize events\n\t      this._onResize = this._getResizeFunction();\n\t      window.addEventListener('resize', this._onResize);\n\t\n\t      // Get container css all in one request. Causes reflow\n\t      var containerCss = window.getComputedStyle(this.element, null);\n\t      var containerWidth = Shuffle.getSize(this.element).width;\n\t\n\t      // Add styles to the container if it doesn't have them.\n\t      this._validateStyles(containerCss);\n\t\n\t      // We already got the container's width above, no need to cause another\n\t      // reflow getting it again... Calculate the number of columns there will be\n\t      this._setColumns(containerWidth);\n\t\n\t      // Kick off!\n\t      this.filter(this.options.group, this.options.initialSort);\n\t\n\t      // The shuffle items haven't had transitions set on them yet so the user\n\t      // doesn't see the first layout. Set them now that the first layout is done.\n\t      // First, however, a synchronous layout must be caused for the previous\n\t      // styles to be applied without transitions.\n\t      this.element.offsetWidth; // jshint ignore: line\n\t      this._setTransitions();\n\t      this.element.style.transition = 'height ' + this.options.speed + 'ms ' + this.options.easing;\n\t    }\n\t\n\t    /**\r\n\t     * Returns a throttled and proxied function for the resize handler.\r\n\t     * @return {Function}\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_getResizeFunction',\n\t    value: function _getResizeFunction() {\n\t      var resizeFunction = this._handleResize.bind(this);\n\t      return this.options.throttle ? this.options.throttle(resizeFunction, this.options.throttleTime) : resizeFunction;\n\t    }\n\t\n\t    /**\r\n\t     * Retrieve an element from an option.\r\n\t     * @param {string|jQuery|Element} option The option to check.\r\n\t     * @return {?Element} The plain element or null.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_getElementOption',\n\t    value: function _getElementOption(option) {\n\t      // If column width is a string, treat is as a selector and search for the\n\t      // sizer element within the outermost container\n\t      if (typeof option === 'string') {\n\t        return this.element.querySelector(option);\n\t\n\t        // Check for an element\n\t      } else if (option && option.nodeType && option.nodeType === 1) {\n\t        return option;\n\t\n\t        // Check for jQuery object\n\t      } else if (option && option.jquery) {\n\t        return option[0];\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /**\r\n\t     * Ensures the shuffle container has the css styles it needs applied to it.\r\n\t     * @param {Object} styles Key value pairs for position and overflow.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_validateStyles',\n\t    value: function _validateStyles(styles) {\n\t      // Position cannot be static.\n\t      if (styles.position === 'static') {\n\t        this.element.style.position = 'relative';\n\t      }\n\t\n\t      // Overflow has to be hidden.\n\t      if (styles.overflow !== 'hidden') {\n\t        this.element.style.overflow = 'hidden';\n\t      }\n\t    }\n\t\n\t    /**\r\n\t     * Filter the elements by a category.\r\n\t     * @param {string} [category] Category to filter by. If it's given, the last\r\n\t     *     category will be used to filter the items.\r\n\t     * @param {Array} [collection] Optionally filter a collection. Defaults to\r\n\t     *     all the items.\r\n\t     * @return {!{visible: Array, hidden: Array}}\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_filter',\n\t    value: function _filter() {\n\t      var category = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.lastFilter;\n\t      var collection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.items;\n\t\n\t      var set = this._getFilteredSets(category, collection);\n\t\n\t      // Individually add/remove hidden/visible classes\n\t      this._toggleFilterClasses(set);\n\t\n\t      // Save the last filter in case elements are appended.\n\t      this.lastFilter = category;\n\t\n\t      // This is saved mainly because providing a filter function (like searching)\n\t      // will overwrite the `lastFilter` property every time its called.\n\t      if (typeof category === 'string') {\n\t        this.group = category;\n\t      }\n\t\n\t      return set;\n\t    }\n\t\n\t    /**\r\n\t     * Returns an object containing the visible and hidden elements.\r\n\t     * @param {string|Function} category Category or function to filter by.\r\n\t     * @param {Array.<Element>} items A collection of items to filter.\r\n\t     * @return {!{visible: Array, hidden: Array}}\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_getFilteredSets',\n\t    value: function _getFilteredSets(category, items) {\n\t      var _this = this;\n\t\n\t      var visible = [];\n\t      var hidden = [];\n\t\n\t      // category === 'all', add visible class to everything\n\t      if (category === Shuffle.ALL_ITEMS) {\n\t        visible = items;\n\t\n\t        // Loop through each item and use provided function to determine\n\t        // whether to hide it or not.\n\t      } else {\n\t        items.forEach(function (item) {\n\t          if (_this._doesPassFilter(category, item.element)) {\n\t            visible.push(item);\n\t          } else {\n\t            hidden.push(item);\n\t          }\n\t        });\n\t      }\n\t\n\t      return {\n\t        visible: visible,\n\t        hidden: hidden\n\t      };\n\t    }\n\t\n\t    /**\r\n\t     * Test an item to see if it passes a category.\r\n\t     * @param {string|Function} category Category or function to filter by.\r\n\t     * @param {Element} element An element to test.\r\n\t     * @return {boolean} Whether it passes the category/filter.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_doesPassFilter',\n\t    value: function _doesPassFilter(category, element) {\n\t\n\t      if (typeof category === 'function') {\n\t        return category.call(element, element, this);\n\t\n\t        // Check each element's data-groups attribute against the given category.\n\t      } else {\n\t        var attr = element.getAttribute('data-' + Shuffle.FILTER_ATTRIBUTE_KEY);\n\t        var keys = this.options.delimeter ? attr.split(this.options.delimeter) : JSON.parse(attr);\n\t\n\t        if (Array.isArray(category)) {\n\t          return category.some(arrayIncludes(keys));\n\t        }\n\t\n\t        return arrayIncludes(keys, category);\n\t      }\n\t    }\n\t\n\t    /**\r\n\t     * Toggles the visible and hidden class names.\r\n\t     * @param {{visible, hidden}} Object with visible and hidden arrays.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_toggleFilterClasses',\n\t    value: function _toggleFilterClasses(_ref) {\n\t      var visible = _ref.visible;\n\t      var hidden = _ref.hidden;\n\t\n\t      visible.forEach(function (item) {\n\t        item.show();\n\t      });\n\t\n\t      hidden.forEach(function (item) {\n\t        item.hide();\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * Set the initial css for each item\r\n\t     * @param {Array.<ShuffleItem>} [items] Optionally specifiy at set to initialize.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_initItems',\n\t    value: function _initItems() {\n\t      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.items;\n\t\n\t      items.forEach(function (item) {\n\t        item.init();\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * Remove element reference and styles.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_disposeItems',\n\t    value: function _disposeItems() {\n\t      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.items;\n\t\n\t      items.forEach(function (item) {\n\t        item.dispose();\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * Updates the visible item count.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_updateItemCount',\n\t    value: function _updateItemCount() {\n\t      this.visibleItems = this._getFilteredItems().length;\n\t    }\n\t\n\t    /**\r\n\t     * Sets css transform transition on a group of elements. This is not executed\r\n\t     * at the same time as `item.init` so that transitions don't occur upon\r\n\t     * initialization of Shuffle.\r\n\t     * @param {Array.<ShuffleItem>} items Shuffle items to set transitions on.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_setTransitions',\n\t    value: function _setTransitions() {\n\t      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.items;\n\t\n\t      var speed = this.options.speed;\n\t      var easing = this.options.easing;\n\t\n\t      var str;\n\t      if (this.options.useTransforms) {\n\t        str = 'transform ' + speed + 'ms ' + easing + ', opacity ' + speed + 'ms ' + easing;\n\t      } else {\n\t        str = 'top ' + speed + 'ms ' + easing + ', left ' + speed + 'ms ' + easing + ', opacity ' + speed + 'ms ' + easing;\n\t      }\n\t\n\t      items.forEach(function (item) {\n\t        item.element.style.transition = str;\n\t      });\n\t    }\n\t  }, {\n\t    key: '_getItems',\n\t    value: function _getItems() {\n\t      var _this2 = this;\n\t\n\t      return toArray(this.element.children).filter(function (el) {\n\t        return (0, _matchesSelector2.default)(el, _this2.options.itemSelector);\n\t      }).map(function (el) {\n\t        return new _shuffleItem2.default(el);\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * When new elements are added to the shuffle container, update the array of\r\n\t     * items because that is the order `_layout` calls them.\r\n\t     */\n\t\n\t  }, {\n\t    key: '_updateItemsOrder',\n\t    value: function _updateItemsOrder() {\n\t      var children = this.element.children;\n\t      this.items = (0, _sorter2.default)(this.items, {\n\t        by: function by(element) {\n\t          return Array.prototype.indexOf.call(children, element);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: '_getFilteredItems',\n\t    value: function _getFilteredItems() {\n\t      return this.items.filter(function (item) {\n\t        return item.isVisible;\n\t      });\n\t    }\n\t  }, {\n\t    key: '_getConcealedItems',\n\t    value: function _getConcealedItems() {\n\t      return this.items.filter(function (item) {\n\t        return !item.isVisible;\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * Returns the column size, based on column width and sizer options.\r\n\t     * @param {number} containerWidth Size of the parent container.\r\n\t     * @param {number} gutterSize Size of the gutters.\r\n\t     * @return {number}\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_getColumnSize',\n\t    value: function _getColumnSize(containerWidth, gutterSize) {\n\t      var size;\n\t\n\t      // If the columnWidth property is a function, then the grid is fluid\n\t      if (typeof this.options.columnWidth === 'function') {\n\t        size = this.options.columnWidth(containerWidth);\n\t\n\t        // columnWidth option isn't a function, are they using a sizing element?\n\t      } else if (this.useSizer) {\n\t        size = Shuffle.getSize(this.options.sizer).width;\n\t\n\t        // if not, how about the explicitly set option?\n\t      } else if (this.options.columnWidth) {\n\t        size = this.options.columnWidth;\n\t\n\t        // or use the size of the first item\n\t      } else if (this.items.length > 0) {\n\t        size = Shuffle.getSize(this.items[0].element, true).width;\n\t\n\t        // if there's no items, use size of container\n\t      } else {\n\t        size = containerWidth;\n\t      }\n\t\n\t      // Don't let them set a column width of zero.\n\t      if (size === 0) {\n\t        size = containerWidth;\n\t      }\n\t\n\t      return size + gutterSize;\n\t    }\n\t\n\t    /**\r\n\t     * Returns the gutter size, based on gutter width and sizer options.\r\n\t     * @param {number} containerWidth Size of the parent container.\r\n\t     * @return {number}\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_getGutterSize',\n\t    value: function _getGutterSize(containerWidth) {\n\t      var size;\n\t      if (typeof this.options.gutterWidth === 'function') {\n\t        size = this.options.gutterWidth(containerWidth);\n\t      } else if (this.useSizer) {\n\t        size = (0, _getNumberStyle2.default)(this.options.sizer, 'marginLeft');\n\t      } else {\n\t        size = this.options.gutterWidth;\n\t      }\n\t\n\t      return size;\n\t    }\n\t\n\t    /**\r\n\t     * Calculate the number of columns to be used. Gets css if using sizer element.\r\n\t     * @param {number} [containerWidth] Optionally specify a container width if\r\n\t     *    it's already available.\r\n\t     */\n\t\n\t  }, {\n\t    key: '_setColumns',\n\t    value: function _setColumns() {\n\t      var containerWidth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Shuffle.getSize(this.element).width;\n\t\n\t      var gutter = this._getGutterSize(containerWidth);\n\t      var columnWidth = this._getColumnSize(containerWidth, gutter);\n\t      var calculatedColumns = (containerWidth + gutter) / columnWidth;\n\t\n\t      // Widths given from getStyles are not precise enough...\n\t      if (Math.abs(Math.round(calculatedColumns) - calculatedColumns) < this.options.columnThreshold) {\n\t        // e.g. calculatedColumns = 11.998876\n\t        calculatedColumns = Math.round(calculatedColumns);\n\t      }\n\t\n\t      this.cols = Math.max(Math.floor(calculatedColumns), 1);\n\t      this.containerWidth = containerWidth;\n\t      this.colWidth = columnWidth;\n\t    }\n\t\n\t    /**\r\n\t     * Adjust the height of the grid\r\n\t     */\n\t\n\t  }, {\n\t    key: '_setContainerSize',\n\t    value: function _setContainerSize() {\n\t      this.element.style.height = this._getContainerSize() + 'px';\n\t    }\n\t\n\t    /**\r\n\t     * Based on the column heights, it returns the biggest one.\r\n\t     * @return {number}\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_getContainerSize',\n\t    value: function _getContainerSize() {\n\t      return arrayMax(this.positions);\n\t    }\n\t\n\t    /**\r\n\t     * Get the clamped stagger amount.\r\n\t     * @param {number} index Index of the item to be staggered.\r\n\t     * @return {number}\r\n\t     */\n\t\n\t  }, {\n\t    key: '_getStaggerAmount',\n\t    value: function _getStaggerAmount(index) {\n\t      return Math.min(index * this.options.staggerAmount, this.options.staggerAmountMax);\n\t    }\n\t\n\t    /**\r\n\t     * @return {boolean} Whether the event was prevented or not.\r\n\t     */\n\t\n\t  }, {\n\t    key: '_dispatch',\n\t    value: function _dispatch(name) {\n\t      var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      if (this.isDestroyed) {\n\t        return;\n\t      }\n\t\n\t      details.shuffle = this;\n\t      return !this.element.dispatchEvent(new CustomEvent(name, {\n\t        bubbles: true,\n\t        cancelable: false,\n\t        detail: details\n\t      }));\n\t    }\n\t\n\t    /**\r\n\t     * Zeros out the y columns array, which is used to determine item placement.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_resetCols',\n\t    value: function _resetCols() {\n\t      var i = this.cols;\n\t      this.positions = [];\n\t      while (i--) {\n\t        this.positions.push(0);\n\t      }\n\t    }\n\t\n\t    /**\r\n\t     * Loops through each item that should be shown and calculates the x, y position.\r\n\t     * @param {Array.<ShuffleItem>} items Array of items that will be shown/layed\r\n\t     *     out in order in their array.\r\n\t     */\n\t\n\t  }, {\n\t    key: '_layout',\n\t    value: function _layout(items) {\n\t      var _this3 = this;\n\t\n\t      var count = 0;\n\t      items.forEach(function (item) {\n\t        var currPos = item.point;\n\t        var currScale = item.scale;\n\t        var itemSize = Shuffle.getSize(item.element, true);\n\t        var pos = _this3._getItemPosition(itemSize);\n\t\n\t        function callback() {\n\t          item.element.style.transitionDelay = '';\n\t          item.applyCss(_shuffleItem2.default.Css.VISIBLE.after);\n\t        }\n\t\n\t        // If the item will not change its position, do not add it to the render\n\t        // queue. Transitions don't fire when setting a property to the same value.\n\t        if (_point2.default.equals(currPos, pos) && currScale === _shuffleItem2.default.Scale.VISIBLE) {\n\t          callback();\n\t          return;\n\t        }\n\t\n\t        item.point = pos;\n\t        item.scale = _shuffleItem2.default.Scale.VISIBLE;\n\t\n\t        // Use xtend here to clone the object so that the `before` object isn't\n\t        // modified when the transition delay is added.\n\t        var styles = (0, _xtend2.default)(_shuffleItem2.default.Css.VISIBLE.before);\n\t        styles.transitionDelay = _this3._getStaggerAmount(count) + 'ms';\n\t\n\t        _this3._queue.push({\n\t          item: item,\n\t          styles: styles,\n\t          callback: callback\n\t        });\n\t\n\t        count++;\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * Determine the location of the next item, based on its size.\r\n\t     * @param {{width: number, height: number}} itemSize Object with width and height.\r\n\t     * @return {Point}\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_getItemPosition',\n\t    value: function _getItemPosition(itemSize) {\n\t      return (0, _layout2.getItemPosition)({\n\t        itemSize: itemSize,\n\t        positions: this.positions,\n\t        gridSize: this.colWidth,\n\t        total: this.cols,\n\t        threshold: this.options.columnThreshold,\n\t        buffer: this.options.buffer\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * Hides the elements that don't match our filter.\r\n\t     * @param {Array.<ShuffleItem>} collection Collection to shrink.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_shrink',\n\t    value: function _shrink() {\n\t      var _this4 = this;\n\t\n\t      var collection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._getConcealedItems();\n\t\n\t      var count = 0;\n\t      collection.forEach(function (item) {\n\t        function callback() {\n\t          item.applyCss(_shuffleItem2.default.Css.HIDDEN.after);\n\t        }\n\t\n\t        // Continuing would add a transitionend event listener to the element, but\n\t        // that listener would not execute because the transform and opacity would\n\t        // stay the same.\n\t        // The callback is executed here because it is not guaranteed to be called\n\t        // after the transitionend event because the transitionend could be\n\t        // canceled if another animation starts.\n\t        if (item.scale === _shuffleItem2.default.Scale.HIDDEN) {\n\t          callback();\n\t          return;\n\t        }\n\t\n\t        item.scale = _shuffleItem2.default.Scale.HIDDEN;\n\t\n\t        var styles = (0, _xtend2.default)(_shuffleItem2.default.Css.HIDDEN.before);\n\t        styles.transitionDelay = _this4._getStaggerAmount(count) + 'ms';\n\t\n\t        _this4._queue.push({\n\t          item: item,\n\t          styles: styles,\n\t          callback: callback\n\t        });\n\t\n\t        count++;\n\t      });\n\t    }\n\t\n\t    /**\r\n\t     * Resize handler.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_handleResize',\n\t    value: function _handleResize() {\n\t      // If shuffle is disabled, destroyed, don't do anything\n\t      if (!this.isEnabled || this.isDestroyed) {\n\t        return;\n\t      }\n\t\n\t      // Will need to check height in the future if it's layed out horizontaly\n\t      var containerWidth = Shuffle.getSize(this.element).width;\n\t\n\t      // containerWidth hasn't changed, don't do anything\n\t      if (containerWidth === this.containerWidth) {\n\t        return;\n\t      }\n\t\n\t      this.update();\n\t    }\n\t\n\t    /**\r\n\t     * Returns styles which will be applied to the an item for a transition.\r\n\t     * @param {Object} obj Transition options.\r\n\t     * @return {!Object} Transforms for transitions, left/top for animate.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_getStylesForTransition',\n\t    value: function _getStylesForTransition(_ref2) {\n\t      var item = _ref2.item;\n\t      var styles = _ref2.styles;\n\t\n\t      if (!styles.transitionDelay) {\n\t        styles.transitionDelay = '0ms';\n\t      }\n\t\n\t      var x = item.point.x;\n\t      var y = item.point.y;\n\t\n\t      if (this.options.useTransforms) {\n\t        styles.transform = 'translate(' + x + 'px, ' + y + 'px) scale(' + item.scale + ')';\n\t      } else {\n\t        styles.left = x + 'px';\n\t        styles.top = y + 'px';\n\t      }\n\t\n\t      return styles;\n\t    }\n\t\n\t    /**\r\n\t     * Listen for the transition end on an element and execute the itemCallback\r\n\t     * when it finishes.\r\n\t     * @param {Element} element Element to listen on.\r\n\t     * @param {Function} itemCallback Callback for the item.\r\n\t     * @param {Function} done Callback to notify `parallel` that this one is done.\r\n\t     */\n\t\n\t  }, {\n\t    key: '_whenTransitionDone',\n\t    value: function _whenTransitionDone(element, itemCallback, done) {\n\t      var id = (0, _onTransitionEnd.onTransitionEnd)(element, function (evt) {\n\t        itemCallback();\n\t        done(null, evt);\n\t      });\n\t\n\t      this._transitions.push(id);\n\t    }\n\t\n\t    /**\r\n\t     * Return a function which will set CSS styles and call the `done` function\r\n\t     * when (if) the transition finishes.\r\n\t     * @param {Object} opts Transition object.\r\n\t     * @return {Function} A function to be called with a `done` function.\r\n\t     */\n\t\n\t  }, {\n\t    key: '_getTransitionFunction',\n\t    value: function _getTransitionFunction(opts) {\n\t      var _this5 = this;\n\t\n\t      return function (done) {\n\t        opts.item.applyCss(_this5._getStylesForTransition(opts));\n\t        _this5._whenTransitionDone(opts.item.element, opts.callback, done);\n\t      };\n\t    }\n\t\n\t    /**\r\n\t     * Execute the styles gathered in the style queue. This applies styles to elements,\r\n\t     * triggering transitions.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_processQueue',\n\t    value: function _processQueue() {\n\t      if (this.isTransitioning) {\n\t        this._cancelMovement();\n\t      }\n\t\n\t      var hasSpeed = this.options.speed > 0;\n\t      var hasQueue = this._queue.length > 0;\n\t\n\t      if (hasQueue && hasSpeed && this.isInitialized) {\n\t        this._startTransitions(this._queue);\n\t      } else if (hasQueue) {\n\t        this._styleImmediately(this._queue);\n\t        this._dispatchLayout();\n\t\n\t        // A call to layout happened, but none of the newly visible items will\n\t        // change position or the transition duration is zero, which will not trigger\n\t        // the transitionend event.\n\t      } else {\n\t        this._dispatchLayout();\n\t      }\n\t\n\t      // Remove everything in the style queue\n\t      this._queue.length = 0;\n\t    }\n\t\n\t    /**\r\n\t     * Wait for each transition to finish, the emit the layout event.\r\n\t     * @param {Array.<Object>} transitions Array of transition objects.\r\n\t     */\n\t\n\t  }, {\n\t    key: '_startTransitions',\n\t    value: function _startTransitions(transitions) {\n\t      var _this6 = this;\n\t\n\t      // Set flag that shuffle is currently in motion.\n\t      this.isTransitioning = true;\n\t\n\t      // Create an array of functions to be called.\n\t      var callbacks = transitions.map(function (obj) {\n\t        return _this6._getTransitionFunction(obj);\n\t      });\n\t\n\t      (0, _arrayParallel2.default)(callbacks, this._movementFinished.bind(this));\n\t    }\n\t  }, {\n\t    key: '_cancelMovement',\n\t    value: function _cancelMovement() {\n\t      // Remove the transition end event for each listener.\n\t      this._transitions.forEach(_onTransitionEnd.cancelTransitionEnd);\n\t\n\t      // Reset the array.\n\t      this._transitions.length = 0;\n\t\n\t      // Show it's no longer active.\n\t      this.isTransitioning = false;\n\t    }\n\t\n\t    /**\r\n\t     * Apply styles without a transition.\r\n\t     * @param {Array.<Object>} objects Array of transition objects.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_styleImmediately',\n\t    value: function _styleImmediately(objects) {\n\t      var _this7 = this;\n\t\n\t      if (objects.length) {\n\t        var elements = objects.map(function (obj) {\n\t          return obj.item.element;\n\t        });\n\t\n\t        Shuffle._skipTransitions(elements, function () {\n\t          objects.forEach(function (obj) {\n\t            obj.item.applyCss(_this7._getStylesForTransition(obj));\n\t            obj.callback();\n\t          });\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: '_movementFinished',\n\t    value: function _movementFinished() {\n\t      this._transitions.length = 0;\n\t      this.isTransitioning = false;\n\t      this._dispatchLayout();\n\t    }\n\t  }, {\n\t    key: '_dispatchLayout',\n\t    value: function _dispatchLayout() {\n\t      this._dispatch(Shuffle.EventType.LAYOUT);\n\t    }\n\t\n\t    /**\r\n\t     * The magic. This is what makes the plugin 'shuffle'\r\n\t     * @param {string|Function|Array.<string>} [category] Category to filter by.\r\n\t     *     Can be a function, string, or array of strings.\r\n\t     * @param {Object} [sortObj] A sort object which can sort the visible set\r\n\t     */\n\t\n\t  }, {\n\t    key: 'filter',\n\t    value: function filter(category, sortObj) {\n\t      if (!this.isEnabled) {\n\t        return;\n\t      }\n\t\n\t      if (!category || category && category.length === 0) {\n\t        category = Shuffle.ALL_ITEMS;\n\t      }\n\t\n\t      this._filter(category);\n\t\n\t      // Shrink each hidden item\n\t      this._shrink();\n\t\n\t      // How many visible elements?\n\t      this._updateItemCount();\n\t\n\t      // Update transforms on visible elements so they will animate to their new positions.\n\t      this.sort(sortObj);\n\t    }\n\t\n\t    /**\r\n\t     * Gets the visible elements, sorts them, and passes them to layout.\r\n\t     * @param {Object} opts the options object for the sorted plugin\r\n\t     */\n\t\n\t  }, {\n\t    key: 'sort',\n\t    value: function sort() {\n\t      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.lastSort;\n\t\n\t      if (!this.isEnabled) {\n\t        return;\n\t      }\n\t\n\t      this._resetCols();\n\t\n\t      var items = this._getFilteredItems();\n\t\n\t      items = (0, _sorter2.default)(items, opts);\n\t\n\t      /**\r\n\t       * We're getting the concealed items so that the layout displays all items\r\n\t       */\n\t      if (this.options.showHidden === true) {\n\t        var concealed = this._getConcealedItems();\n\t\n\t        if (concealed.length > 0) {\n\t          for (var i = 0; i < concealed.length; i++) {\n\t            items.push(concealed[i]);\n\t          }\n\t        }\n\t      }\n\t\n\t      this._layout(items);\n\t\n\t      // `_layout` always happens after `_shrink`, so it's safe to process the style\n\t      // queue here with styles from the shrink method.\n\t      this._processQueue();\n\t\n\t      // Adjust the height of the container.\n\t      this._setContainerSize();\n\t\n\t      this.lastSort = opts;\n\t    }\n\t\n\t    /**\r\n\t     * Reposition everything.\r\n\t     * @param {boolean} isOnlyLayout If true, column and gutter widths won't be\r\n\t     *     recalculated.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'update',\n\t    value: function update(isOnlyLayout) {\n\t      if (this.isEnabled) {\n\t\n\t        if (!isOnlyLayout) {\n\t          // Get updated colCount\n\t          this._setColumns();\n\t        }\n\t\n\t        // Layout items\n\t        this.sort();\n\t      }\n\t    }\n\t\n\t    /**\r\n\t     * Use this instead of `update()` if you don't need the columns and gutters updated\r\n\t     * Maybe an image inside `shuffle` loaded (and now has a height), which means calculations\r\n\t     * could be off.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'layout',\n\t    value: function layout() {\n\t      this.update(true);\n\t    }\n\t\n\t    /**\r\n\t     * New items have been appended to shuffle. Mix them in with the current\r\n\t     * filter or sort status.\r\n\t     * @param {Array.<Element>} newItems Collection of new items.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'add',\n\t    value: function add(newItems) {\n\t      newItems = (0, _arrayUniq2.default)(newItems).map(function (el) {\n\t        return new _shuffleItem2.default(el);\n\t      });\n\t\n\t      // Add classes and set initial positions.\n\t      this._initItems(newItems);\n\t\n\t      // Add transition to each item.\n\t      this._setTransitions(newItems);\n\t\n\t      // Update the list of items.\n\t      this.items = this.items.concat(newItems);\n\t      this._updateItemsOrder();\n\t      this.filter(this.lastFilter);\n\t    }\n\t\n\t    /**\r\n\t     * Disables shuffle from updating dimensions and layout on resize\r\n\t     */\n\t\n\t  }, {\n\t    key: 'disable',\n\t    value: function disable() {\n\t      this.isEnabled = false;\n\t    }\n\t\n\t    /**\r\n\t     * Enables shuffle again\r\n\t     * @param {boolean} [isUpdateLayout=true] if undefined, shuffle will update columns and gutters\r\n\t     */\n\t\n\t  }, {\n\t    key: 'enable',\n\t    value: function enable(isUpdateLayout) {\n\t      this.isEnabled = true;\n\t      if (isUpdateLayout !== false) {\n\t        this.update();\n\t      }\n\t    }\n\t\n\t    /**\r\n\t     * Remove 1 or more shuffle items\r\n\t     * @param {Array.<Element>} collection An array containing one or more\r\n\t     *     elements in shuffle\r\n\t     * @return {Shuffle} The shuffle object\r\n\t     */\n\t\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove(collection) {\n\t      var _this8 = this;\n\t\n\t      if (!collection.length) {\n\t        return;\n\t      }\n\t\n\t      collection = (0, _arrayUniq2.default)(collection);\n\t\n\t      var oldItems = collection.map(function (element) {\n\t        return _this8.getItemByElement(element);\n\t      }).filter(function (item) {\n\t        return !!item;\n\t      });\n\t\n\t      var handleLayout = function handleLayout() {\n\t        _this8.element.removeEventListener(Shuffle.EventType.LAYOUT, handleLayout);\n\t        _this8._disposeItems(oldItems);\n\t\n\t        // Remove the collection in the callback\n\t        collection.forEach(function (element) {\n\t          element.parentNode.removeChild(element);\n\t        });\n\t\n\t        _this8._dispatch(Shuffle.EventType.REMOVED, { collection: collection });\n\t\n\t        // Let it get garbage collected\n\t        collection = null;\n\t        oldItems = null;\n\t      };\n\t\n\t      // Hide collection first.\n\t      this._toggleFilterClasses({\n\t        visible: [],\n\t        hidden: oldItems\n\t      });\n\t\n\t      this._shrink(oldItems);\n\t\n\t      this.sort();\n\t\n\t      // Update the list of items here because `remove` could be called again\n\t      // with an item that is in the process of being removed.\n\t      this.items = this.items.filter(function (item) {\n\t        return !arrayIncludes(oldItems, item);\n\t      });\n\t      this._updateItemCount();\n\t\n\t      this.element.addEventListener(Shuffle.EventType.LAYOUT, handleLayout);\n\t    }\n\t\n\t    /**\r\n\t     * Retrieve a shuffle item by its element.\r\n\t     * @param {Element} element Element to look for.\r\n\t     * @return {?ShuffleItem} A shuffle item or null if it's not found.\r\n\t     */\n\t\n\t  }, {\n\t    key: 'getItemByElement',\n\t    value: function getItemByElement(element) {\n\t      for (var i = this.items.length - 1; i >= 0; i--) {\n\t        if (this.items[i].element === element) {\n\t          return this.items[i];\n\t        }\n\t      }\n\t\n\t      return null;\n\t    }\n\t\n\t    /**\r\n\t     * Destroys shuffle, removes events, styles, and classes\r\n\t     */\n\t\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this._cancelMovement();\n\t      window.removeEventListener('resize', this._onResize);\n\t\n\t      // Reset container styles\n\t      this.element.classList.remove('shuffle');\n\t      this.element.removeAttribute('style');\n\t\n\t      // Reset individual item styles\n\t      this._disposeItems();\n\t\n\t      // Null DOM references\n\t      this.items = null;\n\t      this.options.sizer = null;\n\t      this.element = null;\n\t      this._transitions = null;\n\t\n\t      // Set a flag so if a debounced resize has been triggered,\n\t      // it can first check if it is actually isDestroyed and not doing anything\n\t      this.isDestroyed = true;\n\t    }\n\t\n\t    /**\r\n\t     * Returns the outer width of an element, optionally including its margins.\r\n\t     *\r\n\t     * There are a few different methods for getting the width of an element, none of\r\n\t     * which work perfectly for all Shuffle's use cases.\r\n\t     *\r\n\t     * 1. getBoundingClientRect() `left` and `right` properties.\r\n\t     *   - Accounts for transform scaled elements, making it useless for Shuffle\r\n\t     *   elements which have shrunk.\r\n\t     * 2. The `offsetWidth` property.\r\n\t     *   - This value stays the same regardless of the elements transform property,\r\n\t     *   however, it does not return subpixel values.\r\n\t     * 3. getComputedStyle()\r\n\t     *   - This works great Chrome, Firefox, Safari, but IE<=11 does not include\r\n\t     *   padding and border when box-sizing: border-box is set, requiring a feature\r\n\t     *   test and extra work to add the padding back for IE and other browsers which\r\n\t     *   follow the W3C spec here.\r\n\t     *\r\n\t     * @param {Element} element The element.\r\n\t     * @param {boolean} [includeMargins] Whether to include margins. Default is false.\r\n\t     * @return {{width: number, height: number}} The width and height.\r\n\t     */\n\t\n\t  }], [{\n\t    key: 'getSize',\n\t    value: function getSize(element, includeMargins) {\n\t      // Store the styles so that they can be used by others without asking for it again.\n\t      var styles = window.getComputedStyle(element, null);\n\t      var width = (0, _getNumberStyle2.default)(element, 'width', styles);\n\t      var height = (0, _getNumberStyle2.default)(element, 'height', styles);\n\t\n\t      if (includeMargins) {\n\t        var marginLeft = (0, _getNumberStyle2.default)(element, 'marginLeft', styles);\n\t        var marginRight = (0, _getNumberStyle2.default)(element, 'marginRight', styles);\n\t        var marginTop = (0, _getNumberStyle2.default)(element, 'marginTop', styles);\n\t        var marginBottom = (0, _getNumberStyle2.default)(element, 'marginBottom', styles);\n\t        width += marginLeft + marginRight;\n\t        height += marginTop + marginBottom;\n\t      }\n\t\n\t      return {\n\t        width: width,\n\t        height: height\n\t      };\n\t    }\n\t\n\t    /**\r\n\t     * Change a property or execute a function which will not have a transition\r\n\t     * @param {Array.<Element>} elements DOM elements that won't be transitioned.\r\n\t     * @param {Function} callback A function which will be called while transition\r\n\t     *     is set to 0ms.\r\n\t     * @private\r\n\t     */\n\t\n\t  }, {\n\t    key: '_skipTransitions',\n\t    value: function _skipTransitions(elements, callback) {\n\t      var zero = '0ms';\n\t\n\t      // Save current duration and delay.\n\t      var data = elements.map(function (element) {\n\t        var style = element.style;\n\t        var duration = style.transitionDuration;\n\t        var delay = style.transitionDelay;\n\t\n\t        // Set the duration to zero so it happens immediately\n\t        style.transitionDuration = zero;\n\t        style.transitionDelay = zero;\n\t\n\t        return {\n\t          duration: duration,\n\t          delay: delay\n\t        };\n\t      });\n\t\n\t      callback();\n\t\n\t      // Cause reflow.\n\t      elements[0].offsetWidth; // jshint ignore:line\n\t\n\t      // Put the duration back\n\t      elements.forEach(function (element, i) {\n\t        element.style.transitionDuration = data[i].duration;\n\t        element.style.transitionDelay = data[i].delay;\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Shuffle;\n\t}();\n\t\n\tShuffle.ShuffleItem = _shuffleItem2.default;\n\t\n\tShuffle.ALL_ITEMS = 'all';\n\tShuffle.FILTER_ATTRIBUTE_KEY = 'groups';\n\t\n\t/**\r\n\t * @enum {string}\r\n\t */\n\tShuffle.EventType = {\n\t  LAYOUT: 'shuffle:layout',\n\t  REMOVED: 'shuffle:removed'\n\t};\n\t\n\t/** @enum {string} */\n\tShuffle.Classes = _classes2.default;\n\t\n\t// Overrideable options\n\tShuffle.options = {\n\t  // Initial filter group.\n\t  group: Shuffle.ALL_ITEMS,\n\t\n\t  // Transition/animation speed (milliseconds).\n\t  speed: 250,\n\t\n\t  // CSS easing function to use.\n\t  easing: 'ease',\n\t\n\t  // e.g. '.picture-item'.\n\t  itemSelector: '*',\n\t\n\t  // Element or selector string. Use an element to determine the size of columns\n\t  // and gutters.\n\t  sizer: null,\n\t\n\t  // A static number or function that tells the plugin how wide the gutters\n\t  // between columns are (in pixels).\n\t  gutterWidth: 0,\n\t\n\t  // A static number or function that returns a number which tells the plugin\n\t  // how wide the columns are (in pixels).\n\t  columnWidth: 0,\n\t\n\t  // If your group is not json, and is comma delimeted, you could set delimeter\n\t  // to ','.\n\t  delimeter: null,\n\t\n\t  // Useful for percentage based heights when they might not always be exactly\n\t  // the same (in pixels).\n\t  buffer: 0,\n\t\n\t  // Reading the width of elements isn't precise enough and can cause columns to\n\t  // jump between values.\n\t  columnThreshold: 0.01,\n\t\n\t  // Shuffle can be isInitialized with a sort object. It is the same object\n\t  // given to the sort method.\n\t  initialSort: null,\n\t\n\t  // By default, shuffle will throttle resize events. This can be changed or\n\t  // removed.\n\t  throttle: _throttleit2.default,\n\t\n\t  // How often shuffle can be called on resize (in milliseconds).\n\t  throttleTime: 300,\n\t\n\t  // Transition delay offset for each item in milliseconds.\n\t  staggerAmount: 15,\n\t\n\t  // Maximum stagger delay in milliseconds.\n\t  staggerAmountMax: 250,\n\t\n\t  // Whether to use transforms or absolute positioning.\n\t  useTransforms: true,\n\t\n\t  // Include hidden elements in container sizing\n\t  showHidden: false\n\t};\n\t\n\t// Expose for testing. Hack at your own risk.\n\tShuffle.__Point = _point2.default;\n\tShuffle.__sorter = _sorter2.default;\n\tShuffle.__getColumnSpan = _layout2.getColumnSpan;\n\tShuffle.__getAvailablePositions = _layout2.getAvailablePositions;\n\tShuffle.__getShortColumn = _layout2.getShortColumn;\n\t\n\texports.default = Shuffle;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// Polyfill for creating CustomEvents on IE9/10/11\n\t\n\t// code pulled from:\n\t// https://github.com/d4tocchini/customevent-polyfill\n\t// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\t\n\ttry {\n\t    var ce = new window.CustomEvent('test');\n\t    ce.preventDefault();\n\t    if (ce.defaultPrevented !== true) {\n\t        // IE has problems with .preventDefault() on custom events\n\t        // http://stackoverflow.com/questions/23349191\n\t        throw new Error('Could not prevent default');\n\t    }\n\t} catch(e) {\n\t  var CustomEvent = function(event, params) {\n\t    var evt, origPrevent;\n\t    params = params || {\n\t      bubbles: false,\n\t      cancelable: false,\n\t      detail: undefined\n\t    };\n\t\n\t    evt = document.createEvent(\"CustomEvent\");\n\t    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n\t    origPrevent = evt.preventDefault;\n\t    evt.preventDefault = function () {\n\t      origPrevent.call(this);\n\t      try {\n\t        Object.defineProperty(this, 'defaultPrevented', {\n\t          get: function () {\n\t            return true;\n\t          }\n\t        });\n\t      } catch(e) {\n\t        this.defaultPrevented = true;\n\t      }\n\t    };\n\t    return evt;\n\t  };\n\t\n\t  CustomEvent.prototype = window.Event.prototype;\n\t  window.CustomEvent = CustomEvent; // expose definition to window\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar proto = Element.prototype;\n\tvar vendor = proto.matches\n\t  || proto.matchesSelector\n\t  || proto.webkitMatchesSelector\n\t  || proto.mozMatchesSelector\n\t  || proto.msMatchesSelector\n\t  || proto.oMatchesSelector;\n\t\n\tmodule.exports = match;\n\t\n\t/**\n\t * Match `el` to `selector`.\n\t *\n\t * @param {Element} el\n\t * @param {String} selector\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction match(el, selector) {\n\t  if (vendor) return vendor.call(el, selector);\n\t  var nodes = el.parentNode.querySelectorAll(selector);\n\t  for (var i = 0; i < nodes.length; i++) {\n\t    if (nodes[i] == el) return true;\n\t  }\n\t  return false;\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t// there's 3 implementations written in increasing order of efficiency\n\t\n\t// 1 - no Set type is defined\n\tfunction uniqNoSet(arr) {\n\t\tvar ret = [];\n\t\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (ret.indexOf(arr[i]) === -1) {\n\t\t\t\tret.push(arr[i]);\n\t\t\t}\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t// 2 - a simple Set type is defined\n\tfunction uniqSet(arr) {\n\t\tvar seen = new Set();\n\t\treturn arr.filter(function (el) {\n\t\t\tif (!seen.has(el)) {\n\t\t\t\tseen.add(el);\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\treturn false;\n\t\t});\n\t}\n\t\n\t// 3 - a standard Set type is defined and it has a forEach method\n\tfunction uniqSetWithForEach(arr) {\n\t\tvar ret = [];\n\t\n\t\t(new Set(arr)).forEach(function (el) {\n\t\t\tret.push(el);\n\t\t});\n\t\n\t\treturn ret;\n\t}\n\t\n\t// V8 currently has a broken implementation\n\t// https://github.com/joyent/node/issues/8449\n\tfunction doesForEachActuallyWork() {\n\t\tvar ret = false;\n\t\n\t\t(new Set([true])).forEach(function (el) {\n\t\t\tret = el;\n\t\t});\n\t\n\t\treturn ret === true;\n\t}\n\t\n\tif ('Set' in global) {\n\t\tif (typeof Set.prototype.forEach === 'function' && doesForEachActuallyWork()) {\n\t\t\tmodule.exports = uniqSetWithForEach;\n\t\t} else {\n\t\t\tmodule.exports = uniqSet;\n\t\t}\n\t} else {\n\t\tmodule.exports = uniqNoSet;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = extend\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tfunction extend() {\n\t    var target = {}\n\t\n\t    for (var i = 0; i < arguments.length; i++) {\n\t        var source = arguments[i]\n\t\n\t        for (var key in source) {\n\t            if (hasOwnProperty.call(source, key)) {\n\t                target[key] = source[key]\n\t            }\n\t        }\n\t    }\n\t\n\t    return target\n\t}\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = throttle;\n\t\n\t/**\n\t * Returns a new function that, when invoked, invokes `func` at most once per `wait` milliseconds.\n\t *\n\t * @param {Function} func Function to wrap.\n\t * @param {Number} wait Number of milliseconds that must elapse between `func` invocations.\n\t * @return {Function} A new function that wraps the `func` function passed in.\n\t */\n\t\n\tfunction throttle (func, wait) {\n\t  var ctx, args, rtn, timeoutID; // caching\n\t  var last = 0;\n\t\n\t  return function throttled () {\n\t    ctx = this;\n\t    args = arguments;\n\t    var delta = new Date() - last;\n\t    if (!timeoutID)\n\t      if (delta >= wait) call();\n\t      else timeoutID = setTimeout(call, wait - delta);\n\t    return rtn;\n\t  };\n\t\n\t  function call () {\n\t    timeoutID = 0;\n\t    last = +new Date();\n\t    rtn = func.apply(ctx, args);\n\t    ctx = null;\n\t    args = null;\n\t  }\n\t}\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function parallel(fns, context, callback) {\n\t  if (!callback) {\n\t    if (typeof context === 'function') {\n\t      callback = context\n\t      context = null\n\t    } else {\n\t      callback = noop\n\t    }\n\t  }\n\t\n\t  var pending = fns && fns.length\n\t  if (!pending) return callback(null, []);\n\t\n\t  var finished = false\n\t  var results = new Array(pending)\n\t\n\t  fns.forEach(context ? function (fn, i) {\n\t    fn.call(context, maybeDone(i))\n\t  } : function (fn, i) {\n\t    fn(maybeDone(i))\n\t  })\n\t\n\t  function maybeDone(i) {\n\t    return function (err, result) {\n\t      if (finished) return;\n\t\n\t      if (err) {\n\t        callback(err, results)\n\t        finished = true\n\t        return\n\t      }\n\t\n\t      results[i] = result\n\t\n\t      if (!--pending) callback(null, results);\n\t    }\n\t  }\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _getNumber = __webpack_require__(9);\n\t\n\tvar _getNumber2 = _interopRequireDefault(_getNumber);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t * Represents a coordinate pair.\r\n\t * @param {number} [x=0] X.\r\n\t * @param {number} [y=0] Y.\r\n\t */\n\tvar Point = function Point(x, y) {\n\t  this.x = (0, _getNumber2.default)(x);\n\t  this.y = (0, _getNumber2.default)(y);\n\t};\n\t\n\t/**\r\n\t * Whether two points are equal.\r\n\t * @param {Point} a Point A.\r\n\t * @param {Point} b Point B.\r\n\t * @return {boolean}\r\n\t */\n\tPoint.equals = function (a, b) {\n\t  return a.x === b.x && a.y === b.y;\n\t};\n\t\n\texports.default = Point;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\r\n\t * Always returns a numeric value, given a value. Logic from jQuery's `isNumeric`.\r\n\t * @param {*} value Possibly numeric value.\r\n\t * @return {number} `value` or zero if `value` isn't numeric.\r\n\t */\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getNumber;\n\tfunction getNumber(value) {\n\t  return parseFloat(value) || 0;\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _point = __webpack_require__(8);\n\t\n\tvar _point2 = _interopRequireDefault(_point);\n\t\n\tvar _classes = __webpack_require__(11);\n\t\n\tvar _classes2 = _interopRequireDefault(_classes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar id = 0;\n\t\n\tvar ShuffleItem = function () {\n\t  function ShuffleItem(element) {\n\t    _classCallCheck(this, ShuffleItem);\n\t\n\t    this.id = id++;\n\t    this.element = element;\n\t    this.isVisible = true;\n\t  }\n\t\n\t  _createClass(ShuffleItem, [{\n\t    key: 'show',\n\t    value: function show() {\n\t      this.isVisible = true;\n\t      this.element.classList.remove(_classes2.default.HIDDEN);\n\t      this.element.classList.add(_classes2.default.VISIBLE);\n\t    }\n\t  }, {\n\t    key: 'hide',\n\t    value: function hide() {\n\t      this.isVisible = false;\n\t      this.element.classList.remove(_classes2.default.VISIBLE);\n\t      this.element.classList.add(_classes2.default.HIDDEN);\n\t    }\n\t  }, {\n\t    key: 'init',\n\t    value: function init() {\n\t      this.addClasses([_classes2.default.SHUFFLE_ITEM, _classes2.default.VISIBLE]);\n\t      this.applyCss(ShuffleItem.Css.INITIAL);\n\t      this.scale = ShuffleItem.Scale.VISIBLE;\n\t      this.point = new _point2.default();\n\t    }\n\t  }, {\n\t    key: 'addClasses',\n\t    value: function addClasses(classes) {\n\t      var _this = this;\n\t\n\t      classes.forEach(function (className) {\n\t        _this.element.classList.add(className);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'removeClasses',\n\t    value: function removeClasses(classes) {\n\t      var _this2 = this;\n\t\n\t      classes.forEach(function (className) {\n\t        _this2.element.classList.remove(className);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'applyCss',\n\t    value: function applyCss(obj) {\n\t      for (var key in obj) {\n\t        this.element.style[key] = obj[key];\n\t      }\n\t    }\n\t  }, {\n\t    key: 'dispose',\n\t    value: function dispose() {\n\t      this.removeClasses([_classes2.default.HIDDEN, _classes2.default.VISIBLE, _classes2.default.SHUFFLE_ITEM]);\n\t\n\t      this.element.removeAttribute('style');\n\t      this.element = null;\n\t    }\n\t  }]);\n\t\n\t  return ShuffleItem;\n\t}();\n\t\n\tShuffleItem.Css = {\n\t  INITIAL: {\n\t    position: 'absolute',\n\t    top: 0,\n\t    left: 0,\n\t    visibility: 'visible',\n\t    'will-change': 'transform'\n\t  },\n\t  VISIBLE: {\n\t    before: {\n\t      opacity: 1,\n\t      visibility: 'visible'\n\t    },\n\t    after: {}\n\t  },\n\t  HIDDEN: {\n\t    before: {\n\t      opacity: 0\n\t    },\n\t    after: {\n\t      visibility: 'hidden'\n\t    }\n\t  }\n\t};\n\t\n\tShuffleItem.Scale = {\n\t  VISIBLE: 1,\n\t  HIDDEN: 0.001\n\t};\n\t\n\texports.default = ShuffleItem;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  BASE: 'shuffle',\n\t  SHUFFLE_ITEM: 'shuffle-item',\n\t  VISIBLE: 'shuffle-item--visible',\n\t  HIDDEN: 'shuffle-item--hidden'\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getNumberStyle;\n\t\n\tvar _getNumber = __webpack_require__(9);\n\t\n\tvar _getNumber2 = _interopRequireDefault(_getNumber);\n\t\n\tvar _computedSize = __webpack_require__(13);\n\t\n\tvar _computedSize2 = _interopRequireDefault(_computedSize);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\r\n\t * Retrieve the computed style for an element, parsed as a float.\r\n\t * @param {Element} element Element to get style for.\r\n\t * @param {string} style Style property.\r\n\t * @param {CSSStyleDeclaration} [styles] Optionally include clean styles to\r\n\t *     use instead of asking for them again.\r\n\t * @return {number} The parsed computed value or zero if that fails because IE\r\n\t *     will return 'auto' when the element doesn't have margins instead of\r\n\t *     the computed style.\r\n\t */\n\tfunction getNumberStyle(element, style) {\n\t  var styles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window.getComputedStyle(element, null);\n\t\n\t  var value = (0, _getNumber2.default)(styles[style]);\n\t\n\t  // Support IE<=11 and W3C spec.\n\t  if (!_computedSize2.default && style === 'width') {\n\t    value += (0, _getNumber2.default)(styles.paddingLeft) + (0, _getNumber2.default)(styles.paddingRight) + (0, _getNumber2.default)(styles.borderLeftWidth) + (0, _getNumber2.default)(styles.borderRightWidth);\n\t  } else if (!_computedSize2.default && style === 'height') {\n\t    value += (0, _getNumber2.default)(styles.paddingTop) + (0, _getNumber2.default)(styles.paddingBottom) + (0, _getNumber2.default)(styles.borderTopWidth) + (0, _getNumber2.default)(styles.borderBottomWidth);\n\t  }\n\t\n\t  return value;\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar element = document.body || document.documentElement;\n\tvar e = document.createElement('div');\n\te.style.cssText = 'width:10px;padding:2px;box-sizing:border-box;';\n\telement.appendChild(e);\n\t\n\tvar width = window.getComputedStyle(e, null).width;\n\tvar ret = width === '10px';\n\t\n\telement.removeChild(e);\n\t\n\texports.default = ret;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = sorter;\n\t\n\tvar _xtend = __webpack_require__(5);\n\t\n\tvar _xtend2 = _interopRequireDefault(_xtend);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// http://stackoverflow.com/a/962890/373422\n\tfunction randomize(array) {\n\t  var tmp;\n\t  var current;\n\t  var top = array.length;\n\t\n\t  if (!top) {\n\t    return array;\n\t  }\n\t\n\t  while (--top) {\n\t    current = Math.floor(Math.random() * (top + 1));\n\t    tmp = array[current];\n\t    array[current] = array[top];\n\t    array[top] = tmp;\n\t  }\n\t\n\t  return array;\n\t}\n\t\n\tvar defaults = {\n\t  // Use array.reverse() to reverse the results\n\t  reverse: false,\n\t\n\t  // Sorting function\n\t  by: null,\n\t\n\t  // If true, this will skip the sorting and return a randomized order in the array\n\t  randomize: false,\n\t\n\t  // Determines which property of each item in the array is passed to the\n\t  // sorting method.\n\t  key: 'element'\n\t};\n\t\n\t// You can return `undefined` from the `by` function to revert to DOM order.\n\tfunction sorter(arr, options) {\n\t  var opts = (0, _xtend2.default)(defaults, options);\n\t  var original = [].slice.call(arr);\n\t  var revert = false;\n\t\n\t  if (!arr.length) {\n\t    return [];\n\t  }\n\t\n\t  if (opts.randomize) {\n\t    return randomize(arr);\n\t  }\n\t\n\t  // Sort the elements by the opts.by function.\n\t  // If we don't have opts.by, default to DOM order\n\t  if (typeof opts.by === 'function') {\n\t    arr.sort(function (a, b) {\n\t\n\t      // Exit early if we already know we want to revert\n\t      if (revert) {\n\t        return 0;\n\t      }\n\t\n\t      var valA = opts.by(a[opts.key]);\n\t      var valB = opts.by(b[opts.key]);\n\t\n\t      // If both values are undefined, use the DOM order\n\t      if (valA === undefined && valB === undefined) {\n\t        revert = true;\n\t        return 0;\n\t      }\n\t\n\t      if (valA < valB || valA === 'sortFirst' || valB === 'sortLast') {\n\t        return -1;\n\t      }\n\t\n\t      if (valA > valB || valA === 'sortLast' || valB === 'sortFirst') {\n\t        return 1;\n\t      }\n\t\n\t      return 0;\n\t    });\n\t  }\n\t\n\t  // Revert to the original array if necessary\n\t  if (revert) {\n\t    return original;\n\t  }\n\t\n\t  if (opts.reverse) {\n\t    arr.reverse();\n\t  }\n\t\n\t  return arr;\n\t}\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.onTransitionEnd = onTransitionEnd;\n\texports.cancelTransitionEnd = cancelTransitionEnd;\n\tvar transitions = {};\n\tvar eventName = 'transitionend';\n\tvar count = 0;\n\t\n\tfunction uniqueId() {\n\t  return eventName + count++;\n\t}\n\t\n\tfunction onTransitionEnd(element, callback) {\n\t  var id = uniqueId();\n\t  var listener = function listener(evt) {\n\t    if (evt.currentTarget === evt.target) {\n\t      cancelTransitionEnd(id);\n\t      callback(evt);\n\t    }\n\t  };\n\t\n\t  element.addEventListener(eventName, listener);\n\t\n\t  transitions[id] = { element: element, listener: listener };\n\t\n\t  return id;\n\t}\n\t\n\tfunction cancelTransitionEnd(id) {\n\t  if (transitions[id]) {\n\t    transitions[id].element.removeEventListener(eventName, transitions[id].listener);\n\t    transitions[id] = null;\n\t    return true;\n\t  }\n\t\n\t  return false;\n\t}\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getItemPosition = getItemPosition;\n\texports.getColumnSpan = getColumnSpan;\n\texports.getAvailablePositions = getAvailablePositions;\n\texports.getShortColumn = getShortColumn;\n\t\n\tvar _point = __webpack_require__(8);\n\t\n\tvar _point2 = _interopRequireDefault(_point);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction arrayMax(array) {\n\t  return Math.max.apply(Math, array);\n\t}\n\t\n\tfunction arrayMin(array) {\n\t  return Math.min.apply(Math, array);\n\t}\n\t\n\t/**\r\n\t * Determine the location of the next item, based on its size.\r\n\t * @param {Object} itemSize Object with width and height.\r\n\t * @param {Array.<number>} positions Positions of the other current items.\r\n\t * @param {number} gridSize The column width or row height.\r\n\t * @param {number} total The total number of columns or rows.\r\n\t * @param {number} threshold Buffer value for the column to fit.\r\n\t * @param {number} buffer Vertical buffer for the height of items.\r\n\t * @return {Point}\r\n\t */\n\tfunction getItemPosition(_ref) {\n\t  var itemSize = _ref.itemSize;\n\t  var positions = _ref.positions;\n\t  var gridSize = _ref.gridSize;\n\t  var total = _ref.total;\n\t  var threshold = _ref.threshold;\n\t  var buffer = _ref.buffer;\n\t\n\t  var span = getColumnSpan(itemSize.width, gridSize, total, threshold);\n\t  var setY = getAvailablePositions(positions, span, total);\n\t  var shortColumnIndex = getShortColumn(setY, buffer);\n\t\n\t  // Position the item\n\t  var point = new _point2.default(Math.round(gridSize * shortColumnIndex), Math.round(setY[shortColumnIndex]));\n\t\n\t  // Update the columns array with the new values for each column.\n\t  // e.g. before the update the columns could be [250, 0, 0, 0] for an item\n\t  // which spans 2 columns. After it would be [250, itemHeight, itemHeight, 0].\n\t  var setHeight = setY[shortColumnIndex] + itemSize.height;\n\t  for (var i = 0; i < span; i++) {\n\t    positions[shortColumnIndex + i] = setHeight;\n\t  }\n\t\n\t  return point;\n\t}\n\t\n\t/**\r\n\t * Determine the number of columns an items spans.\r\n\t * @param {number} itemWidth Width of the item.\r\n\t * @param {number} columnWidth Width of the column (includes gutter).\r\n\t * @param {number} columns Total number of columns\r\n\t * @param {number} threshold A buffer value for the size of the column to fit.\r\n\t * @return {number}\r\n\t */\n\tfunction getColumnSpan(itemWidth, columnWidth, columns, threshold) {\n\t  var columnSpan = itemWidth / columnWidth;\n\t\n\t  // If the difference between the rounded column span number and the\n\t  // calculated column span number is really small, round the number to\n\t  // make it fit.\n\t  if (Math.abs(Math.round(columnSpan) - columnSpan) < threshold) {\n\t    // e.g. columnSpan = 4.0089945390298745\n\t    columnSpan = Math.round(columnSpan);\n\t  }\n\t\n\t  // Ensure the column span is not more than the amount of columns in the whole layout.\n\t  return Math.min(Math.ceil(columnSpan), columns);\n\t}\n\t\n\t/**\r\n\t * Retrieves the column set to use for placement.\r\n\t * @param {number} columnSpan The number of columns this current item spans.\r\n\t * @param {number} columns The total columns in the grid.\r\n\t * @return {Array.<number>} An array of numbers represeting the column set.\r\n\t */\n\tfunction getAvailablePositions(positions, columnSpan, columns) {\n\t  // The item spans only one column.\n\t  if (columnSpan === 1) {\n\t    return positions;\n\t  }\n\t\n\t  // The item spans more than one column, figure out how many different\n\t  // places it could fit horizontally.\n\t  // The group count is the number of places within the positions this block\n\t  // could fit, ignoring the current positions of items.\n\t  // Imagine a 2 column brick as the second item in a 4 column grid with\n\t  // 10px height each. Find the places it would fit:\n\t  // [20, 10, 10, 0]\n\t  //  |   |   |\n\t  //  *   *   *\n\t  //\n\t  // Then take the places which fit and get the bigger of the two:\n\t  // max([20, 10]), max([10, 10]), max([10, 0]) = [20, 10, 0]\n\t  //\n\t  // Next, find the first smallest number (the short column).\n\t  // [20, 10, 0]\n\t  //          |\n\t  //          *\n\t  //\n\t  // And that's where it should be placed!\n\t  //\n\t  // Another example where the second column's item extends past the first:\n\t  // [10, 20, 10, 0] => [20, 20, 10] => 10\n\t  var available = [];\n\t\n\t  // For how many possible positions for this item there are.\n\t  for (var i = 0; i <= columns - columnSpan; i++) {\n\t    // Find the bigger value for each place it could fit.\n\t    available.push(arrayMax(positions.slice(i, i + columnSpan)));\n\t  }\n\t\n\t  return available;\n\t}\n\t\n\t/**\r\n\t * Find index of short column, the first from the left where this item will go.\r\n\t *\r\n\t * @param {Array.<number>} positions The array to search for the smallest number.\r\n\t * @param {number} buffer Optional buffer which is very useful when the height\r\n\t *     is a percentage of the width.\r\n\t * @return {number} Index of the short column.\r\n\t */\n\tfunction getShortColumn(positions, buffer) {\n\t  var minPosition = arrayMin(positions);\n\t  for (var i = 0, len = positions.length; i < len; i++) {\n\t    if (positions[i] >= minPosition - buffer && positions[i] <= minPosition + buffer) {\n\t      return i;\n\t    }\n\t  }\n\t\n\t  return 0;\n\t}\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** shuffle.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 266729409fbade64ed21\n **/","module.exports = require('./shuffle').default;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","'use strict';\r\n\r\nimport 'custom-event-polyfill';\r\nimport matches from 'matches-selector';\r\nimport arrayUnique from 'array-uniq';\r\nimport xtend from 'xtend';\r\nimport throttle from 'throttleit';\r\nimport parallel from 'array-parallel';\r\nimport Point from './point';\r\nimport ShuffleItem from './shuffle-item';\r\nimport Classes from './classes';\r\nimport getNumberStyle from './get-number-style';\r\nimport sorter from './sorter';\r\nimport { onTransitionEnd, cancelTransitionEnd } from './on-transition-end';\r\nimport { getItemPosition, getColumnSpan, getAvailablePositions, getShortColumn } from './layout';\r\n\r\nfunction toArray(arrayLike) {\r\n  return Array.prototype.slice.call(arrayLike);\r\n}\r\n\r\nfunction arrayMax(array) {\r\n  return Math.max.apply(Math, array);\r\n}\r\n\r\nfunction arrayIncludes(array, obj) {\r\n  if (arguments.length === 2) {\r\n    return arrayIncludes(array)(obj);\r\n  }\r\n\r\n  return function (obj) {\r\n    return array.indexOf(obj) > -1;\r\n  };\r\n}\r\n\r\n// Used for unique instance variables\r\nlet id = 0;\r\n\r\nclass Shuffle {\r\n\r\n  /**\r\n   * Categorize, sort, and filter a responsive grid of items.\r\n   *\r\n   * @param {Element} element An element which is the parent container for the grid items.\r\n   * @param {Object} [options=Shuffle.options] Options object.\r\n   * @constructor\r\n   */\r\n  constructor(element, options = {}) {\r\n    this.options = xtend(Shuffle.options, options);\r\n\r\n    this.useSizer = false;\r\n    this.lastSort = {};\r\n    this.group = this.lastFilter = Shuffle.ALL_ITEMS;\r\n    this.isEnabled = true;\r\n    this.isDestroyed = false;\r\n    this.isInitialized = false;\r\n    this._transitions = [];\r\n    this.isTransitioning = false;\r\n    this._queue = [];\r\n\r\n    element = this._getElementOption(element);\r\n\r\n    if (!element) {\r\n      throw new TypeError('Shuffle needs to be initialized with an element.');\r\n    }\r\n\r\n    this.element = element;\r\n    this.id = 'shuffle_' + id++;\r\n\r\n    this._init();\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  _init() {\r\n    this.items = this._getItems();\r\n\r\n    this.options.sizer = this._getElementOption(this.options.sizer);\r\n\r\n    if (this.options.sizer) {\r\n      this.useSizer = true;\r\n    }\r\n\r\n    // Add class and invalidate styles\r\n    this.element.classList.add(Shuffle.Classes.BASE);\r\n\r\n    // Set initial css for each item\r\n    this._initItems();\r\n\r\n    // Bind resize events\r\n    this._onResize = this._getResizeFunction();\r\n    window.addEventListener('resize', this._onResize);\r\n\r\n    // Get container css all in one request. Causes reflow\r\n    var containerCss = window.getComputedStyle(this.element, null);\r\n    var containerWidth = Shuffle.getSize(this.element).width;\r\n\r\n    // Add styles to the container if it doesn't have them.\r\n    this._validateStyles(containerCss);\r\n\r\n    // We already got the container's width above, no need to cause another\r\n    // reflow getting it again... Calculate the number of columns there will be\r\n    this._setColumns(containerWidth);\r\n\r\n    // Kick off!\r\n    this.filter(this.options.group, this.options.initialSort);\r\n\r\n    // The shuffle items haven't had transitions set on them yet so the user\r\n    // doesn't see the first layout. Set them now that the first layout is done.\r\n    // First, however, a synchronous layout must be caused for the previous\r\n    // styles to be applied without transitions.\r\n    this.element.offsetWidth; // jshint ignore: line\r\n    this._setTransitions();\r\n    this.element.style.transition = 'height ' + this.options.speed + 'ms ' + this.options.easing;\r\n  }\r\n\r\n  /**\r\n   * Returns a throttled and proxied function for the resize handler.\r\n   * @return {Function}\r\n   * @private\r\n   */\r\n  _getResizeFunction() {\r\n    var resizeFunction = this._handleResize.bind(this);\r\n    return this.options.throttle ?\r\n        this.options.throttle(resizeFunction, this.options.throttleTime) :\r\n        resizeFunction;\r\n  }\r\n\r\n  /**\r\n   * Retrieve an element from an option.\r\n   * @param {string|jQuery|Element} option The option to check.\r\n   * @return {?Element} The plain element or null.\r\n   * @private\r\n   */\r\n  _getElementOption(option) {\r\n    // If column width is a string, treat is as a selector and search for the\r\n    // sizer element within the outermost container\r\n    if (typeof option === 'string') {\r\n      return this.element.querySelector(option);\r\n\r\n    // Check for an element\r\n    } else if (option && option.nodeType && option.nodeType === 1) {\r\n      return option;\r\n\r\n    // Check for jQuery object\r\n    } else if (option && option.jquery) {\r\n      return option[0];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Ensures the shuffle container has the css styles it needs applied to it.\r\n   * @param {Object} styles Key value pairs for position and overflow.\r\n   * @private\r\n   */\r\n  _validateStyles(styles) {\r\n    // Position cannot be static.\r\n    if (styles.position === 'static') {\r\n      this.element.style.position = 'relative';\r\n    }\r\n\r\n    // Overflow has to be hidden.\r\n    if (styles.overflow !== 'hidden') {\r\n      this.element.style.overflow = 'hidden';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Filter the elements by a category.\r\n   * @param {string} [category] Category to filter by. If it's given, the last\r\n   *     category will be used to filter the items.\r\n   * @param {Array} [collection] Optionally filter a collection. Defaults to\r\n   *     all the items.\r\n   * @return {!{visible: Array, hidden: Array}}\r\n   * @private\r\n   */\r\n  _filter(category = this.lastFilter, collection = this.items) {\r\n    var set = this._getFilteredSets(category, collection);\r\n\r\n    // Individually add/remove hidden/visible classes\r\n    this._toggleFilterClasses(set);\r\n\r\n    // Save the last filter in case elements are appended.\r\n    this.lastFilter = category;\r\n\r\n    // This is saved mainly because providing a filter function (like searching)\r\n    // will overwrite the `lastFilter` property every time its called.\r\n    if (typeof category === 'string') {\r\n      this.group = category;\r\n    }\r\n\r\n    return set;\r\n  }\r\n\r\n  /**\r\n   * Returns an object containing the visible and hidden elements.\r\n   * @param {string|Function} category Category or function to filter by.\r\n   * @param {Array.<Element>} items A collection of items to filter.\r\n   * @return {!{visible: Array, hidden: Array}}\r\n   * @private\r\n   */\r\n  _getFilteredSets(category, items) {\r\n    let visible = [];\r\n    let hidden = [];\r\n\r\n    // category === 'all', add visible class to everything\r\n    if (category === Shuffle.ALL_ITEMS) {\r\n      visible = items;\r\n\r\n    // Loop through each item and use provided function to determine\r\n    // whether to hide it or not.\r\n    } else {\r\n      items.forEach((item) => {\r\n        if (this._doesPassFilter(category, item.element)) {\r\n          visible.push(item);\r\n        } else {\r\n          hidden.push(item);\r\n        }\r\n      });\r\n    }\r\n\r\n    return {\r\n      visible,\r\n      hidden,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Test an item to see if it passes a category.\r\n   * @param {string|Function} category Category or function to filter by.\r\n   * @param {Element} element An element to test.\r\n   * @return {boolean} Whether it passes the category/filter.\r\n   * @private\r\n   */\r\n  _doesPassFilter(category, element) {\r\n\r\n    if (typeof category === 'function') {\r\n      return category.call(element, element, this);\r\n\r\n    // Check each element's data-groups attribute against the given category.\r\n    } else {\r\n      let attr = element.getAttribute('data-' + Shuffle.FILTER_ATTRIBUTE_KEY);\r\n      let keys = this.options.delimeter ?\r\n          attr.split(this.options.delimeter) :\r\n          JSON.parse(attr);\r\n\r\n      if (Array.isArray(category)) {\r\n        return category.some(arrayIncludes(keys));\r\n      }\r\n\r\n      return arrayIncludes(keys, category);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the visible and hidden class names.\r\n   * @param {{visible, hidden}} Object with visible and hidden arrays.\r\n   * @private\r\n   */\r\n  _toggleFilterClasses({ visible, hidden }) {\r\n    visible.forEach((item) => {\r\n      item.show();\r\n    });\r\n\r\n    hidden.forEach((item) => {\r\n      item.hide();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set the initial css for each item\r\n   * @param {Array.<ShuffleItem>} [items] Optionally specifiy at set to initialize.\r\n   * @private\r\n   */\r\n  _initItems(items = this.items) {\r\n    items.forEach((item) => {\r\n      item.init();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove element reference and styles.\r\n   * @private\r\n   */\r\n  _disposeItems(items = this.items) {\r\n    items.forEach((item) => {\r\n      item.dispose();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates the visible item count.\r\n   * @private\r\n   */\r\n  _updateItemCount() {\r\n    this.visibleItems = this._getFilteredItems().length;\r\n  }\r\n\r\n  /**\r\n   * Sets css transform transition on a group of elements. This is not executed\r\n   * at the same time as `item.init` so that transitions don't occur upon\r\n   * initialization of Shuffle.\r\n   * @param {Array.<ShuffleItem>} items Shuffle items to set transitions on.\r\n   * @private\r\n   */\r\n  _setTransitions(items = this.items) {\r\n    let speed = this.options.speed;\r\n    let easing = this.options.easing;\r\n\r\n    var str;\r\n    if (this.options.useTransforms) {\r\n      str = 'transform ' + speed + 'ms ' + easing +\r\n        ', opacity ' + speed + 'ms ' + easing;\r\n    } else {\r\n      str = 'top ' + speed + 'ms ' + easing +\r\n        ', left ' + speed + 'ms ' + easing +\r\n        ', opacity ' + speed + 'ms ' + easing;\r\n    }\r\n\r\n    items.forEach((item) => {\r\n      item.element.style.transition = str;\r\n    });\r\n  }\r\n\r\n  _getItems() {\r\n    return toArray(this.element.children)\r\n      .filter(el => matches(el, this.options.itemSelector))\r\n      .map(el => new ShuffleItem(el));\r\n  }\r\n\r\n  /**\r\n   * When new elements are added to the shuffle container, update the array of\r\n   * items because that is the order `_layout` calls them.\r\n   */\r\n  _updateItemsOrder() {\r\n    let children = this.element.children;\r\n    this.items = sorter(this.items, {\r\n      by(element) {\r\n        return Array.prototype.indexOf.call(children, element);\r\n      },\r\n    });\r\n  }\r\n\r\n  _getFilteredItems() {\r\n    return this.items.filter(item => item.isVisible);\r\n  }\r\n\r\n  _getConcealedItems() {\r\n    return this.items.filter(item => !item.isVisible);\r\n  }\r\n\r\n  /**\r\n   * Returns the column size, based on column width and sizer options.\r\n   * @param {number} containerWidth Size of the parent container.\r\n   * @param {number} gutterSize Size of the gutters.\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _getColumnSize(containerWidth, gutterSize) {\r\n    var size;\r\n\r\n    // If the columnWidth property is a function, then the grid is fluid\r\n    if (typeof this.options.columnWidth === 'function') {\r\n      size = this.options.columnWidth(containerWidth);\r\n\r\n    // columnWidth option isn't a function, are they using a sizing element?\r\n    } else if (this.useSizer) {\r\n      size = Shuffle.getSize(this.options.sizer).width;\r\n\r\n    // if not, how about the explicitly set option?\r\n    } else if (this.options.columnWidth) {\r\n      size = this.options.columnWidth;\r\n\r\n    // or use the size of the first item\r\n    } else if (this.items.length > 0) {\r\n      size = Shuffle.getSize(this.items[0].element, true).width;\r\n\r\n    // if there's no items, use size of container\r\n    } else {\r\n      size = containerWidth;\r\n    }\r\n\r\n    // Don't let them set a column width of zero.\r\n    if (size === 0) {\r\n      size = containerWidth;\r\n    }\r\n\r\n    return size + gutterSize;\r\n  }\r\n\r\n  /**\r\n   * Returns the gutter size, based on gutter width and sizer options.\r\n   * @param {number} containerWidth Size of the parent container.\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _getGutterSize(containerWidth) {\r\n    var size;\r\n    if (typeof this.options.gutterWidth === 'function') {\r\n      size = this.options.gutterWidth(containerWidth);\r\n    } else if (this.useSizer) {\r\n      size = getNumberStyle(this.options.sizer, 'marginLeft');\r\n    } else {\r\n      size = this.options.gutterWidth;\r\n    }\r\n\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * Calculate the number of columns to be used. Gets css if using sizer element.\r\n   * @param {number} [containerWidth] Optionally specify a container width if\r\n   *    it's already available.\r\n   */\r\n  _setColumns(containerWidth = Shuffle.getSize(this.element).width) {\r\n    var gutter = this._getGutterSize(containerWidth);\r\n    var columnWidth = this._getColumnSize(containerWidth, gutter);\r\n    var calculatedColumns = (containerWidth + gutter) / columnWidth;\r\n\r\n    // Widths given from getStyles are not precise enough...\r\n    if (Math.abs(Math.round(calculatedColumns) - calculatedColumns) <\r\n        this.options.columnThreshold) {\r\n      // e.g. calculatedColumns = 11.998876\r\n      calculatedColumns = Math.round(calculatedColumns);\r\n    }\r\n\r\n    this.cols = Math.max(Math.floor(calculatedColumns), 1);\r\n    this.containerWidth = containerWidth;\r\n    this.colWidth = columnWidth;\r\n  }\r\n\r\n  /**\r\n   * Adjust the height of the grid\r\n   */\r\n  _setContainerSize() {\r\n    this.element.style.height = this._getContainerSize() + 'px';\r\n  }\r\n\r\n  /**\r\n   * Based on the column heights, it returns the biggest one.\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _getContainerSize() {\r\n    return arrayMax(this.positions);\r\n  }\r\n\r\n  /**\r\n   * Get the clamped stagger amount.\r\n   * @param {number} index Index of the item to be staggered.\r\n   * @return {number}\r\n   */\r\n  _getStaggerAmount(index) {\r\n    return Math.min(index * this.options.staggerAmount, this.options.staggerAmountMax);\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Whether the event was prevented or not.\r\n   */\r\n  _dispatch(name, details = {}) {\r\n    if (this.isDestroyed) {\r\n      return;\r\n    }\r\n\r\n    details.shuffle = this;\r\n    return !this.element.dispatchEvent(new CustomEvent(name, {\r\n      bubbles: true,\r\n      cancelable: false,\r\n      detail: details,\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Zeros out the y columns array, which is used to determine item placement.\r\n   * @private\r\n   */\r\n  _resetCols() {\r\n    var i = this.cols;\r\n    this.positions = [];\r\n    while (i--) {\r\n      this.positions.push(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loops through each item that should be shown and calculates the x, y position.\r\n   * @param {Array.<ShuffleItem>} items Array of items that will be shown/layed\r\n   *     out in order in their array.\r\n   */\r\n  _layout(items) {\r\n    let count = 0;\r\n    items.forEach((item) => {\r\n      var currPos = item.point;\r\n      var currScale = item.scale;\r\n      var itemSize = Shuffle.getSize(item.element, true);\r\n      var pos = this._getItemPosition(itemSize);\r\n\r\n      function callback() {\r\n        item.element.style.transitionDelay = '';\r\n        item.applyCss(ShuffleItem.Css.VISIBLE.after);\r\n      }\r\n\r\n      // If the item will not change its position, do not add it to the render\r\n      // queue. Transitions don't fire when setting a property to the same value.\r\n      if (Point.equals(currPos, pos) && currScale === ShuffleItem.Scale.VISIBLE) {\r\n        callback();\r\n        return;\r\n      }\r\n\r\n      item.point = pos;\r\n      item.scale = ShuffleItem.Scale.VISIBLE;\r\n\r\n      // Use xtend here to clone the object so that the `before` object isn't\r\n      // modified when the transition delay is added.\r\n      let styles = xtend(ShuffleItem.Css.VISIBLE.before);\r\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\r\n\r\n      this._queue.push({\r\n        item,\r\n        styles,\r\n        callback,\r\n      });\r\n\r\n      count++;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Determine the location of the next item, based on its size.\r\n   * @param {{width: number, height: number}} itemSize Object with width and height.\r\n   * @return {Point}\r\n   * @private\r\n   */\r\n  _getItemPosition(itemSize) {\r\n    return getItemPosition({\r\n      itemSize,\r\n      positions: this.positions,\r\n      gridSize: this.colWidth,\r\n      total: this.cols,\r\n      threshold: this.options.columnThreshold,\r\n      buffer: this.options.buffer,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Hides the elements that don't match our filter.\r\n   * @param {Array.<ShuffleItem>} collection Collection to shrink.\r\n   * @private\r\n   */\r\n  _shrink(collection = this._getConcealedItems()) {\r\n    let count = 0;\r\n    collection.forEach((item) => {\r\n      function callback() {\r\n        item.applyCss(ShuffleItem.Css.HIDDEN.after);\r\n      }\r\n\r\n      // Continuing would add a transitionend event listener to the element, but\r\n      // that listener would not execute because the transform and opacity would\r\n      // stay the same.\r\n      // The callback is executed here because it is not guaranteed to be called\r\n      // after the transitionend event because the transitionend could be\r\n      // canceled if another animation starts.\r\n      if (item.scale === ShuffleItem.Scale.HIDDEN) {\r\n        callback();\r\n        return;\r\n      }\r\n\r\n      item.scale = ShuffleItem.Scale.HIDDEN;\r\n\r\n      let styles = xtend(ShuffleItem.Css.HIDDEN.before);\r\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\r\n\r\n      this._queue.push({\r\n        item,\r\n        styles,\r\n        callback,\r\n      });\r\n\r\n      count++;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Resize handler.\r\n   * @private\r\n   */\r\n  _handleResize() {\r\n    // If shuffle is disabled, destroyed, don't do anything\r\n    if (!this.isEnabled || this.isDestroyed) {\r\n      return;\r\n    }\r\n\r\n    // Will need to check height in the future if it's layed out horizontaly\r\n    var containerWidth = Shuffle.getSize(this.element).width;\r\n\r\n    // containerWidth hasn't changed, don't do anything\r\n    if (containerWidth === this.containerWidth) {\r\n      return;\r\n    }\r\n\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Returns styles which will be applied to the an item for a transition.\r\n   * @param {Object} obj Transition options.\r\n   * @return {!Object} Transforms for transitions, left/top for animate.\r\n   * @private\r\n   */\r\n  _getStylesForTransition({ item, styles }) {\r\n    if (!styles.transitionDelay) {\r\n      styles.transitionDelay = '0ms';\r\n    }\r\n\r\n    let x = item.point.x;\r\n    let y = item.point.y;\r\n\r\n    if (this.options.useTransforms) {\r\n      styles.transform = `translate(${x}px, ${y}px) scale(${item.scale})`;\r\n    } else {\r\n      styles.left = x + 'px';\r\n      styles.top = y + 'px';\r\n    }\r\n\r\n    return styles;\r\n  }\r\n\r\n  /**\r\n   * Listen for the transition end on an element and execute the itemCallback\r\n   * when it finishes.\r\n   * @param {Element} element Element to listen on.\r\n   * @param {Function} itemCallback Callback for the item.\r\n   * @param {Function} done Callback to notify `parallel` that this one is done.\r\n   */\r\n  _whenTransitionDone(element, itemCallback, done) {\r\n    let id = onTransitionEnd(element, (evt) => {\r\n      itemCallback();\r\n      done(null, evt);\r\n    });\r\n\r\n    this._transitions.push(id);\r\n  }\r\n\r\n  /**\r\n   * Return a function which will set CSS styles and call the `done` function\r\n   * when (if) the transition finishes.\r\n   * @param {Object} opts Transition object.\r\n   * @return {Function} A function to be called with a `done` function.\r\n   */\r\n  _getTransitionFunction(opts) {\r\n    return (done) => {\r\n      opts.item.applyCss(this._getStylesForTransition(opts));\r\n      this._whenTransitionDone(opts.item.element, opts.callback, done);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Execute the styles gathered in the style queue. This applies styles to elements,\r\n   * triggering transitions.\r\n   * @private\r\n   */\r\n  _processQueue() {\r\n    if (this.isTransitioning) {\r\n      this._cancelMovement();\r\n    }\r\n\r\n    let hasSpeed = this.options.speed > 0;\r\n    let hasQueue = this._queue.length > 0;\r\n\r\n    if (hasQueue && hasSpeed && this.isInitialized) {\r\n      this._startTransitions(this._queue);\r\n\r\n    } else if (hasQueue) {\r\n      this._styleImmediately(this._queue);\r\n      this._dispatchLayout();\r\n\r\n    // A call to layout happened, but none of the newly visible items will\r\n    // change position or the transition duration is zero, which will not trigger\r\n    // the transitionend event.\r\n    } else {\r\n      this._dispatchLayout();\r\n    }\r\n\r\n    // Remove everything in the style queue\r\n    this._queue.length = 0;\r\n  }\r\n\r\n  /**\r\n   * Wait for each transition to finish, the emit the layout event.\r\n   * @param {Array.<Object>} transitions Array of transition objects.\r\n   */\r\n  _startTransitions(transitions) {\r\n    // Set flag that shuffle is currently in motion.\r\n    this.isTransitioning = true;\r\n\r\n    // Create an array of functions to be called.\r\n    let callbacks = transitions.map(obj => this._getTransitionFunction(obj));\r\n\r\n    parallel(callbacks, this._movementFinished.bind(this));\r\n  }\r\n\r\n  _cancelMovement() {\r\n    // Remove the transition end event for each listener.\r\n    this._transitions.forEach(cancelTransitionEnd);\r\n\r\n    // Reset the array.\r\n    this._transitions.length = 0;\r\n\r\n    // Show it's no longer active.\r\n    this.isTransitioning = false;\r\n  }\r\n\r\n  /**\r\n   * Apply styles without a transition.\r\n   * @param {Array.<Object>} objects Array of transition objects.\r\n   * @private\r\n   */\r\n  _styleImmediately(objects) {\r\n    if (objects.length) {\r\n      let elements = objects.map(obj => obj.item.element);\r\n\r\n      Shuffle._skipTransitions(elements, () => {\r\n        objects.forEach((obj) => {\r\n          obj.item.applyCss(this._getStylesForTransition(obj));\r\n          obj.callback();\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  _movementFinished() {\r\n    this._transitions.length = 0;\r\n    this.isTransitioning = false;\r\n    this._dispatchLayout();\r\n  }\r\n\r\n  _dispatchLayout() {\r\n    this._dispatch(Shuffle.EventType.LAYOUT);\r\n  }\r\n\r\n  /**\r\n   * The magic. This is what makes the plugin 'shuffle'\r\n   * @param {string|Function|Array.<string>} [category] Category to filter by.\r\n   *     Can be a function, string, or array of strings.\r\n   * @param {Object} [sortObj] A sort object which can sort the visible set\r\n   */\r\n  filter(category, sortObj) {\r\n    if (!this.isEnabled) {\r\n      return;\r\n    }\r\n\r\n    if (!category || (category && category.length === 0)) {\r\n      category = Shuffle.ALL_ITEMS;\r\n    }\r\n\r\n    this._filter(category);\r\n\r\n    // Shrink each hidden item\r\n    this._shrink();\r\n\r\n    // How many visible elements?\r\n    this._updateItemCount();\r\n\r\n    // Update transforms on visible elements so they will animate to their new positions.\r\n    this.sort(sortObj);\r\n  }\r\n\r\n  /**\r\n   * Gets the visible elements, sorts them, and passes them to layout.\r\n   * @param {Object} opts the options object for the sorted plugin\r\n   */\r\n  sort(opts = this.lastSort) {\r\n    if (!this.isEnabled) {\r\n      return;\r\n    }\r\n\r\n    this._resetCols();\r\n\r\n    var items = this._getFilteredItems();\r\n\r\n    \r\n    items = sorter(items, opts);\r\n\r\n\r\n    /**\r\n     * We're getting the concealed items so that the layout displays all items\r\n     */\r\n    if (this.options.showHidden === true){\r\n      var concealed = this._getConcealedItems();\r\n      \r\n      if(concealed.length > 0) {\r\n        for(var i = 0; i < concealed.length; i++) {\r\n          items.push(concealed[i]);\r\n        }\r\n        \r\n      }    \r\n    }\r\n\r\n\r\n    this._layout(items);\r\n\r\n\r\n\r\n    // `_layout` always happens after `_shrink`, so it's safe to process the style\r\n    // queue here with styles from the shrink method.\r\n    this._processQueue();\r\n\r\n    // Adjust the height of the container.\r\n    this._setContainerSize();\r\n\r\n    this.lastSort = opts;\r\n  }\r\n\r\n  /**\r\n   * Reposition everything.\r\n   * @param {boolean} isOnlyLayout If true, column and gutter widths won't be\r\n   *     recalculated.\r\n   */\r\n  update(isOnlyLayout) {\r\n    if (this.isEnabled) {\r\n\r\n      if (!isOnlyLayout) {\r\n        // Get updated colCount\r\n        this._setColumns();\r\n      }\r\n\r\n      // Layout items\r\n      this.sort();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Use this instead of `update()` if you don't need the columns and gutters updated\r\n   * Maybe an image inside `shuffle` loaded (and now has a height), which means calculations\r\n   * could be off.\r\n   */\r\n  layout() {\r\n    this.update(true);\r\n  }\r\n\r\n  /**\r\n   * New items have been appended to shuffle. Mix them in with the current\r\n   * filter or sort status.\r\n   * @param {Array.<Element>} newItems Collection of new items.\r\n   */\r\n  add(newItems) {\r\n    newItems = arrayUnique(newItems).map(el => new ShuffleItem(el));\r\n\r\n    // Add classes and set initial positions.\r\n    this._initItems(newItems);\r\n\r\n    // Add transition to each item.\r\n    this._setTransitions(newItems);\r\n\r\n    // Update the list of items.\r\n    this.items = this.items.concat(newItems);\r\n    this._updateItemsOrder();\r\n    this.filter(this.lastFilter);\r\n  }\r\n\r\n  /**\r\n   * Disables shuffle from updating dimensions and layout on resize\r\n   */\r\n  disable() {\r\n    this.isEnabled = false;\r\n  }\r\n\r\n  /**\r\n   * Enables shuffle again\r\n   * @param {boolean} [isUpdateLayout=true] if undefined, shuffle will update columns and gutters\r\n   */\r\n  enable(isUpdateLayout) {\r\n    this.isEnabled = true;\r\n    if (isUpdateLayout !== false) {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove 1 or more shuffle items\r\n   * @param {Array.<Element>} collection An array containing one or more\r\n   *     elements in shuffle\r\n   * @return {Shuffle} The shuffle object\r\n   */\r\n  remove(collection) {\r\n    if (!collection.length) {\r\n      return;\r\n    }\r\n\r\n    collection = arrayUnique(collection);\r\n\r\n    let oldItems = collection\r\n      .map(element => this.getItemByElement(element))\r\n      .filter(item => !!item);\r\n\r\n    let handleLayout = () => {\r\n      this.element.removeEventListener(Shuffle.EventType.LAYOUT, handleLayout);\r\n      this._disposeItems(oldItems);\r\n\r\n      // Remove the collection in the callback\r\n      collection.forEach((element) => {\r\n        element.parentNode.removeChild(element);\r\n      });\r\n\r\n      this._dispatch(Shuffle.EventType.REMOVED, { collection });\r\n\r\n      // Let it get garbage collected\r\n      collection = null;\r\n      oldItems = null;\r\n    };\r\n\r\n    // Hide collection first.\r\n    this._toggleFilterClasses({\r\n      visible: [],\r\n      hidden: oldItems,\r\n    });\r\n\r\n    this._shrink(oldItems);\r\n\r\n    this.sort();\r\n\r\n    // Update the list of items here because `remove` could be called again\r\n    // with an item that is in the process of being removed.\r\n    this.items = this.items.filter(item => !arrayIncludes(oldItems, item));\r\n    this._updateItemCount();\r\n\r\n    this.element.addEventListener(Shuffle.EventType.LAYOUT, handleLayout);\r\n  }\r\n\r\n  /**\r\n   * Retrieve a shuffle item by its element.\r\n   * @param {Element} element Element to look for.\r\n   * @return {?ShuffleItem} A shuffle item or null if it's not found.\r\n   */\r\n  getItemByElement(element) {\r\n    for (var i = this.items.length - 1; i >= 0; i--) {\r\n      if (this.items[i].element === element) {\r\n        return this.items[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Destroys shuffle, removes events, styles, and classes\r\n   */\r\n  destroy() {\r\n    this._cancelMovement();\r\n    window.removeEventListener('resize', this._onResize);\r\n\r\n    // Reset container styles\r\n    this.element.classList.remove('shuffle');\r\n    this.element.removeAttribute('style');\r\n\r\n    // Reset individual item styles\r\n    this._disposeItems();\r\n\r\n    // Null DOM references\r\n    this.items = null;\r\n    this.options.sizer = null;\r\n    this.element = null;\r\n    this._transitions = null;\r\n\r\n    // Set a flag so if a debounced resize has been triggered,\r\n    // it can first check if it is actually isDestroyed and not doing anything\r\n    this.isDestroyed = true;\r\n  }\r\n\r\n  /**\r\n   * Returns the outer width of an element, optionally including its margins.\r\n   *\r\n   * There are a few different methods for getting the width of an element, none of\r\n   * which work perfectly for all Shuffle's use cases.\r\n   *\r\n   * 1. getBoundingClientRect() `left` and `right` properties.\r\n   *   - Accounts for transform scaled elements, making it useless for Shuffle\r\n   *   elements which have shrunk.\r\n   * 2. The `offsetWidth` property.\r\n   *   - This value stays the same regardless of the elements transform property,\r\n   *   however, it does not return subpixel values.\r\n   * 3. getComputedStyle()\r\n   *   - This works great Chrome, Firefox, Safari, but IE<=11 does not include\r\n   *   padding and border when box-sizing: border-box is set, requiring a feature\r\n   *   test and extra work to add the padding back for IE and other browsers which\r\n   *   follow the W3C spec here.\r\n   *\r\n   * @param {Element} element The element.\r\n   * @param {boolean} [includeMargins] Whether to include margins. Default is false.\r\n   * @return {{width: number, height: number}} The width and height.\r\n   */\r\n  static getSize(element, includeMargins) {\r\n    // Store the styles so that they can be used by others without asking for it again.\r\n    var styles = window.getComputedStyle(element, null);\r\n    var width = getNumberStyle(element, 'width', styles);\r\n    var height = getNumberStyle(element, 'height', styles);\r\n\r\n    if (includeMargins) {\r\n      var marginLeft = getNumberStyle(element, 'marginLeft', styles);\r\n      var marginRight = getNumberStyle(element, 'marginRight', styles);\r\n      var marginTop = getNumberStyle(element, 'marginTop', styles);\r\n      var marginBottom = getNumberStyle(element, 'marginBottom', styles);\r\n      width += marginLeft + marginRight;\r\n      height += marginTop + marginBottom;\r\n    }\r\n\r\n    return {\r\n      width,\r\n      height,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Change a property or execute a function which will not have a transition\r\n   * @param {Array.<Element>} elements DOM elements that won't be transitioned.\r\n   * @param {Function} callback A function which will be called while transition\r\n   *     is set to 0ms.\r\n   * @private\r\n   */\r\n  static _skipTransitions(elements, callback) {\r\n    let zero = '0ms';\r\n\r\n    // Save current duration and delay.\r\n    let data = elements.map((element) => {\r\n      let style = element.style;\r\n      let duration = style.transitionDuration;\r\n      let delay = style.transitionDelay;\r\n\r\n      // Set the duration to zero so it happens immediately\r\n      style.transitionDuration = zero;\r\n      style.transitionDelay = zero;\r\n\r\n      return {\r\n        duration,\r\n        delay,\r\n      };\r\n    });\r\n\r\n    callback();\r\n\r\n    // Cause reflow.\r\n    elements[0].offsetWidth; // jshint ignore:line\r\n\r\n    // Put the duration back\r\n    elements.forEach((element, i) => {\r\n      element.style.transitionDuration = data[i].duration;\r\n      element.style.transitionDelay = data[i].delay;\r\n    });\r\n  }\r\n}\r\n\r\nShuffle.ShuffleItem = ShuffleItem;\r\n\r\nShuffle.ALL_ITEMS = 'all';\r\nShuffle.FILTER_ATTRIBUTE_KEY = 'groups';\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nShuffle.EventType = {\r\n  LAYOUT: 'shuffle:layout',\r\n  REMOVED: 'shuffle:removed',\r\n};\r\n\r\n/** @enum {string} */\r\nShuffle.Classes = Classes;\r\n\r\n// Overrideable options\r\nShuffle.options = {\r\n  // Initial filter group.\r\n  group: Shuffle.ALL_ITEMS,\r\n\r\n  // Transition/animation speed (milliseconds).\r\n  speed: 250,\r\n\r\n  // CSS easing function to use.\r\n  easing: 'ease',\r\n\r\n  // e.g. '.picture-item'.\r\n  itemSelector: '*',\r\n\r\n  // Element or selector string. Use an element to determine the size of columns\r\n  // and gutters.\r\n  sizer: null,\r\n\r\n  // A static number or function that tells the plugin how wide the gutters\r\n  // between columns are (in pixels).\r\n  gutterWidth: 0,\r\n\r\n  // A static number or function that returns a number which tells the plugin\r\n  // how wide the columns are (in pixels).\r\n  columnWidth: 0,\r\n\r\n  // If your group is not json, and is comma delimeted, you could set delimeter\r\n  // to ','.\r\n  delimeter: null,\r\n\r\n  // Useful for percentage based heights when they might not always be exactly\r\n  // the same (in pixels).\r\n  buffer: 0,\r\n\r\n  // Reading the width of elements isn't precise enough and can cause columns to\r\n  // jump between values.\r\n  columnThreshold: 0.01,\r\n\r\n  // Shuffle can be isInitialized with a sort object. It is the same object\r\n  // given to the sort method.\r\n  initialSort: null,\r\n\r\n  // By default, shuffle will throttle resize events. This can be changed or\r\n  // removed.\r\n  throttle: throttle,\r\n\r\n  // How often shuffle can be called on resize (in milliseconds).\r\n  throttleTime: 300,\r\n\r\n  // Transition delay offset for each item in milliseconds.\r\n  staggerAmount: 15,\r\n\r\n  // Maximum stagger delay in milliseconds.\r\n  staggerAmountMax: 250,\r\n\r\n  // Whether to use transforms or absolute positioning.\r\n  useTransforms: true,\r\n\r\n  // Include hidden elements in container sizing\r\n  showHidden: false,\r\n};\r\n\r\n// Expose for testing. Hack at your own risk.\r\nShuffle.__Point = Point;\r\nShuffle.__sorter = sorter;\r\nShuffle.__getColumnSpan = getColumnSpan;\r\nShuffle.__getAvailablePositions = getAvailablePositions;\r\nShuffle.__getShortColumn = getShortColumn;\r\n\r\nexport default Shuffle;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shuffle.js\n **/","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\ntry {\n    var ce = new window.CustomEvent('test');\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n        // IE has problems with .preventDefault() on custom events\n        // http://stackoverflow.com/questions/23349191\n        throw new Error('Could not prevent default');\n    }\n} catch(e) {\n  var CustomEvent = function(event, params) {\n    var evt, origPrevent;\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    };\n\n    evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    origPrevent = evt.preventDefault;\n    evt.preventDefault = function () {\n      origPrevent.call(this);\n      try {\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () {\n            return true;\n          }\n        });\n      } catch(e) {\n        this.defaultPrevented = true;\n      }\n    };\n    return evt;\n  };\n\n  CustomEvent.prototype = window.Event.prototype;\n  window.CustomEvent = CustomEvent; // expose definition to window\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/custom-event-polyfill/custom-event-polyfill.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nvar proto = Element.prototype;\nvar vendor = proto.matches\n  || proto.matchesSelector\n  || proto.webkitMatchesSelector\n  || proto.mozMatchesSelector\n  || proto.msMatchesSelector\n  || proto.oMatchesSelector;\n\nmodule.exports = match;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match(el, selector) {\n  if (vendor) return vendor.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/matches-selector/index.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\n// there's 3 implementations written in increasing order of efficiency\n\n// 1 - no Set type is defined\nfunction uniqNoSet(arr) {\n\tvar ret = [];\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (ret.indexOf(arr[i]) === -1) {\n\t\t\tret.push(arr[i]);\n\t\t}\n\t}\n\n\treturn ret;\n}\n\n// 2 - a simple Set type is defined\nfunction uniqSet(arr) {\n\tvar seen = new Set();\n\treturn arr.filter(function (el) {\n\t\tif (!seen.has(el)) {\n\t\t\tseen.add(el);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t});\n}\n\n// 3 - a standard Set type is defined and it has a forEach method\nfunction uniqSetWithForEach(arr) {\n\tvar ret = [];\n\n\t(new Set(arr)).forEach(function (el) {\n\t\tret.push(el);\n\t});\n\n\treturn ret;\n}\n\n// V8 currently has a broken implementation\n// https://github.com/joyent/node/issues/8449\nfunction doesForEachActuallyWork() {\n\tvar ret = false;\n\n\t(new Set([true])).forEach(function (el) {\n\t\tret = el;\n\t});\n\n\treturn ret === true;\n}\n\nif ('Set' in global) {\n\tif (typeof Set.prototype.forEach === 'function' && doesForEachActuallyWork()) {\n\t\tmodule.exports = uniqSetWithForEach;\n\t} else {\n\t\tmodule.exports = uniqSet;\n\t}\n} else {\n\tmodule.exports = uniqNoSet;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/array-uniq/index.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xtend/immutable.js\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = throttle;\n\n/**\n * Returns a new function that, when invoked, invokes `func` at most once per `wait` milliseconds.\n *\n * @param {Function} func Function to wrap.\n * @param {Number} wait Number of milliseconds that must elapse between `func` invocations.\n * @return {Function} A new function that wraps the `func` function passed in.\n */\n\nfunction throttle (func, wait) {\n  var ctx, args, rtn, timeoutID; // caching\n  var last = 0;\n\n  return function throttled () {\n    ctx = this;\n    args = arguments;\n    var delta = new Date() - last;\n    if (!timeoutID)\n      if (delta >= wait) call();\n      else timeoutID = setTimeout(call, wait - delta);\n    return rtn;\n  };\n\n  function call () {\n    timeoutID = 0;\n    last = +new Date();\n    rtn = func.apply(ctx, args);\n    ctx = null;\n    args = null;\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/throttleit/index.js\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = function parallel(fns, context, callback) {\n  if (!callback) {\n    if (typeof context === 'function') {\n      callback = context\n      context = null\n    } else {\n      callback = noop\n    }\n  }\n\n  var pending = fns && fns.length\n  if (!pending) return callback(null, []);\n\n  var finished = false\n  var results = new Array(pending)\n\n  fns.forEach(context ? function (fn, i) {\n    fn.call(context, maybeDone(i))\n  } : function (fn, i) {\n    fn(maybeDone(i))\n  })\n\n  function maybeDone(i) {\n    return function (err, result) {\n      if (finished) return;\n\n      if (err) {\n        callback(err, results)\n        finished = true\n        return\n      }\n\n      results[i] = result\n\n      if (!--pending) callback(null, results);\n    }\n  }\n}\n\nfunction noop() {}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/array-parallel/index.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\r\n\r\nimport getNumber from './get-number';\r\n\r\n/**\r\n * Represents a coordinate pair.\r\n * @param {number} [x=0] X.\r\n * @param {number} [y=0] Y.\r\n */\r\nconst Point = function (x, y) {\r\n  this.x = getNumber(x);\r\n  this.y = getNumber(y);\r\n};\r\n\r\n/**\r\n * Whether two points are equal.\r\n * @param {Point} a Point A.\r\n * @param {Point} b Point B.\r\n * @return {boolean}\r\n */\r\nPoint.equals = function (a, b) {\r\n  return a.x === b.x && a.y === b.y;\r\n};\r\n\r\nexport default Point;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/point.js\n **/","'use strict';\r\n\r\n/**\r\n * Always returns a numeric value, given a value. Logic from jQuery's `isNumeric`.\r\n * @param {*} value Possibly numeric value.\r\n * @return {number} `value` or zero if `value` isn't numeric.\r\n */\r\nexport default function getNumber(value) {\r\n  return parseFloat(value) || 0;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/get-number.js\n **/","import Point from './point';\r\nimport Classes from './classes';\r\n\r\nlet id = 0;\r\n\r\nclass ShuffleItem {\r\n  constructor(element) {\r\n    this.id = id++;\r\n    this.element = element;\r\n    this.isVisible = true;\r\n  }\r\n\r\n  show() {\r\n    this.isVisible = true;\r\n    this.element.classList.remove(Classes.HIDDEN);\r\n    this.element.classList.add(Classes.VISIBLE);\r\n  }\r\n\r\n  hide() {\r\n    this.isVisible = false;\r\n    this.element.classList.remove(Classes.VISIBLE);\r\n    this.element.classList.add(Classes.HIDDEN);\r\n  }\r\n\r\n  init() {\r\n    this.addClasses([Classes.SHUFFLE_ITEM, Classes.VISIBLE]);\r\n    this.applyCss(ShuffleItem.Css.INITIAL);\r\n    this.scale = ShuffleItem.Scale.VISIBLE;\r\n    this.point = new Point();\r\n  }\r\n\r\n  addClasses(classes) {\r\n    classes.forEach((className) => {\r\n      this.element.classList.add(className);\r\n    });\r\n  }\r\n\r\n  removeClasses(classes) {\r\n    classes.forEach((className) => {\r\n      this.element.classList.remove(className);\r\n    });\r\n  }\r\n\r\n  applyCss(obj) {\r\n    for (var key in obj) {\r\n      this.element.style[key] = obj[key];\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    this.removeClasses([\r\n      Classes.HIDDEN,\r\n      Classes.VISIBLE,\r\n      Classes.SHUFFLE_ITEM,\r\n    ]);\r\n\r\n    this.element.removeAttribute('style');\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nShuffleItem.Css = {\r\n  INITIAL: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    visibility: 'visible',\r\n    'will-change': 'transform',\r\n  },\r\n  VISIBLE: {\r\n    before: {\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n    },\r\n    after: {},\r\n  },\r\n  HIDDEN: {\r\n    before: {\r\n      opacity: 0,\r\n    },\r\n    after: {\r\n      visibility: 'hidden',\r\n    },\r\n  },\r\n};\r\n\r\nShuffleItem.Scale = {\r\n  VISIBLE: 1,\r\n  HIDDEN: 0.001,\r\n};\r\n\r\nexport default ShuffleItem;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shuffle-item.js\n **/","export default {\r\n  BASE: 'shuffle',\r\n  SHUFFLE_ITEM: 'shuffle-item',\r\n  VISIBLE: 'shuffle-item--visible',\r\n  HIDDEN: 'shuffle-item--hidden',\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/classes.js\n **/","'use strict';\r\n\r\nimport getNumber from './get-number';\r\nimport COMPUTED_SIZE_INCLUDES_PADDING from './computed-size';\r\n\r\n/**\r\n * Retrieve the computed style for an element, parsed as a float.\r\n * @param {Element} element Element to get style for.\r\n * @param {string} style Style property.\r\n * @param {CSSStyleDeclaration} [styles] Optionally include clean styles to\r\n *     use instead of asking for them again.\r\n * @return {number} The parsed computed value or zero if that fails because IE\r\n *     will return 'auto' when the element doesn't have margins instead of\r\n *     the computed style.\r\n */\r\nexport default function getNumberStyle(element, style,\r\n    styles = window.getComputedStyle(element, null)) {\r\n  var value = getNumber(styles[style]);\r\n\r\n  // Support IE<=11 and W3C spec.\r\n  if (!COMPUTED_SIZE_INCLUDES_PADDING && style === 'width') {\r\n    value += getNumber(styles.paddingLeft) +\r\n      getNumber(styles.paddingRight) +\r\n      getNumber(styles.borderLeftWidth) +\r\n      getNumber(styles.borderRightWidth);\r\n  } else if (!COMPUTED_SIZE_INCLUDES_PADDING && style === 'height') {\r\n    value += getNumber(styles.paddingTop) +\r\n      getNumber(styles.paddingBottom) +\r\n      getNumber(styles.borderTopWidth) +\r\n      getNumber(styles.borderBottomWidth);\r\n  }\r\n\r\n  return value;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/get-number-style.js\n **/","\r\nlet element = document.body || document.documentElement;\r\nlet e = document.createElement('div');\r\ne.style.cssText = 'width:10px;padding:2px;box-sizing:border-box;';\r\nelement.appendChild(e);\r\n\r\nlet width = window.getComputedStyle(e, null).width;\r\nlet ret = width === '10px';\r\n\r\nelement.removeChild(e);\r\n\r\nexport default ret;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/computed-size.js\n **/","'use strict';\r\n\r\nimport xtend from 'xtend';\r\n\r\n// http://stackoverflow.com/a/962890/373422\r\nfunction randomize(array) {\r\n  var tmp;\r\n  var current;\r\n  let top = array.length;\r\n\r\n  if (!top) {\r\n    return array;\r\n  }\r\n\r\n  while (--top) {\r\n    current = Math.floor(Math.random() * (top + 1));\r\n    tmp = array[current];\r\n    array[current] = array[top];\r\n    array[top] = tmp;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nlet defaults = {\r\n  // Use array.reverse() to reverse the results\r\n  reverse: false,\r\n\r\n  // Sorting function\r\n  by: null,\r\n\r\n  // If true, this will skip the sorting and return a randomized order in the array\r\n  randomize: false,\r\n\r\n  // Determines which property of each item in the array is passed to the\r\n  // sorting method.\r\n  key: 'element',\r\n};\r\n\r\n// You can return `undefined` from the `by` function to revert to DOM order.\r\nexport default function sorter(arr, options) {\r\n  let opts = xtend(defaults, options);\r\n  let original = [].slice.call(arr);\r\n  let revert = false;\r\n\r\n  if (!arr.length) {\r\n    return [];\r\n  }\r\n\r\n  if (opts.randomize) {\r\n    return randomize(arr);\r\n  }\r\n\r\n  // Sort the elements by the opts.by function.\r\n  // If we don't have opts.by, default to DOM order\r\n  if (typeof opts.by === 'function') {\r\n    arr.sort(function (a, b) {\r\n\r\n      // Exit early if we already know we want to revert\r\n      if (revert) {\r\n        return 0;\r\n      }\r\n\r\n      let valA = opts.by(a[opts.key]);\r\n      let valB = opts.by(b[opts.key]);\r\n\r\n      // If both values are undefined, use the DOM order\r\n      if (valA === undefined && valB === undefined) {\r\n        revert = true;\r\n        return 0;\r\n      }\r\n\r\n      if (valA < valB || valA === 'sortFirst' || valB === 'sortLast') {\r\n        return -1;\r\n      }\r\n\r\n      if (valA > valB || valA === 'sortLast' || valB === 'sortFirst') {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  // Revert to the original array if necessary\r\n  if (revert) {\r\n    return original;\r\n  }\r\n\r\n  if (opts.reverse) {\r\n    arr.reverse();\r\n  }\r\n\r\n  return arr;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/sorter.js\n **/","'use strict';\r\n\r\nlet transitions = {};\r\nlet eventName = 'transitionend';\r\nlet count = 0;\r\n\r\nfunction uniqueId() {\r\n  return eventName + count++;\r\n}\r\n\r\nexport function onTransitionEnd(element, callback) {\r\n  let id = uniqueId();\r\n  let listener = (evt) => {\r\n    if (evt.currentTarget === evt.target) {\r\n      cancelTransitionEnd(id);\r\n      callback(evt);\r\n    }\r\n  };\r\n\r\n  element.addEventListener(eventName, listener);\r\n\r\n  transitions[id] = { element, listener };\r\n\r\n  return id;\r\n}\r\n\r\nexport function cancelTransitionEnd(id) {\r\n  if (transitions[id]) {\r\n    transitions[id].element.removeEventListener(eventName, transitions[id].listener);\r\n    transitions[id] = null;\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/on-transition-end.js\n **/","'use strict';\r\n\r\nimport Point from './point';\r\n\r\nfunction arrayMax(array) {\r\n  return Math.max.apply(Math, array);\r\n}\r\n\r\nfunction arrayMin(array) {\r\n  return Math.min.apply(Math, array);\r\n}\r\n\r\n/**\r\n * Determine the location of the next item, based on its size.\r\n * @param {Object} itemSize Object with width and height.\r\n * @param {Array.<number>} positions Positions of the other current items.\r\n * @param {number} gridSize The column width or row height.\r\n * @param {number} total The total number of columns or rows.\r\n * @param {number} threshold Buffer value for the column to fit.\r\n * @param {number} buffer Vertical buffer for the height of items.\r\n * @return {Point}\r\n */\r\nexport function getItemPosition({ itemSize, positions, gridSize, total, threshold, buffer }) {\r\n  var span = getColumnSpan(itemSize.width, gridSize, total, threshold);\r\n  var setY = getAvailablePositions(positions, span, total);\r\n  var shortColumnIndex = getShortColumn(setY, buffer);\r\n\r\n  // Position the item\r\n  var point = new Point(\r\n    Math.round(gridSize * shortColumnIndex),\r\n    Math.round(setY[shortColumnIndex]));\r\n\r\n  // Update the columns array with the new values for each column.\r\n  // e.g. before the update the columns could be [250, 0, 0, 0] for an item\r\n  // which spans 2 columns. After it would be [250, itemHeight, itemHeight, 0].\r\n  var setHeight = setY[shortColumnIndex] + itemSize.height;\r\n  for (var i = 0; i < span; i++) {\r\n    positions[shortColumnIndex + i] = setHeight;\r\n  }\r\n\r\n  return point;\r\n}\r\n\r\n/**\r\n * Determine the number of columns an items spans.\r\n * @param {number} itemWidth Width of the item.\r\n * @param {number} columnWidth Width of the column (includes gutter).\r\n * @param {number} columns Total number of columns\r\n * @param {number} threshold A buffer value for the size of the column to fit.\r\n * @return {number}\r\n */\r\nexport function getColumnSpan(itemWidth, columnWidth, columns, threshold) {\r\n  var columnSpan = itemWidth / columnWidth;\r\n\r\n  // If the difference between the rounded column span number and the\r\n  // calculated column span number is really small, round the number to\r\n  // make it fit.\r\n  if (Math.abs(Math.round(columnSpan) - columnSpan) < threshold) {\r\n    // e.g. columnSpan = 4.0089945390298745\r\n    columnSpan = Math.round(columnSpan);\r\n  }\r\n\r\n  // Ensure the column span is not more than the amount of columns in the whole layout.\r\n  return Math.min(Math.ceil(columnSpan), columns);\r\n}\r\n\r\n/**\r\n * Retrieves the column set to use for placement.\r\n * @param {number} columnSpan The number of columns this current item spans.\r\n * @param {number} columns The total columns in the grid.\r\n * @return {Array.<number>} An array of numbers represeting the column set.\r\n */\r\nexport function getAvailablePositions(positions, columnSpan, columns) {\r\n  // The item spans only one column.\r\n  if (columnSpan === 1) {\r\n    return positions;\r\n  }\r\n\r\n  // The item spans more than one column, figure out how many different\r\n  // places it could fit horizontally.\r\n  // The group count is the number of places within the positions this block\r\n  // could fit, ignoring the current positions of items.\r\n  // Imagine a 2 column brick as the second item in a 4 column grid with\r\n  // 10px height each. Find the places it would fit:\r\n  // [20, 10, 10, 0]\r\n  //  |   |   |\r\n  //  *   *   *\r\n  //\r\n  // Then take the places which fit and get the bigger of the two:\r\n  // max([20, 10]), max([10, 10]), max([10, 0]) = [20, 10, 0]\r\n  //\r\n  // Next, find the first smallest number (the short column).\r\n  // [20, 10, 0]\r\n  //          |\r\n  //          *\r\n  //\r\n  // And that's where it should be placed!\r\n  //\r\n  // Another example where the second column's item extends past the first:\r\n  // [10, 20, 10, 0] => [20, 20, 10] => 10\r\n  var available = [];\r\n\r\n  // For how many possible positions for this item there are.\r\n  for (var i = 0; i <= columns - columnSpan; i++) {\r\n    // Find the bigger value for each place it could fit.\r\n    available.push(arrayMax(positions.slice(i, i + columnSpan)));\r\n  }\r\n\r\n  return available;\r\n}\r\n\r\n/**\r\n * Find index of short column, the first from the left where this item will go.\r\n *\r\n * @param {Array.<number>} positions The array to search for the smallest number.\r\n * @param {number} buffer Optional buffer which is very useful when the height\r\n *     is a percentage of the width.\r\n * @return {number} Index of the short column.\r\n */\r\nexport function getShortColumn(positions, buffer) {\r\n  var minPosition = arrayMin(positions);\r\n  for (var i = 0, len = positions.length; i < len; i++) {\r\n    if (positions[i] >= minPosition - buffer && positions[i] <= minPosition + buffer) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/layout.js\n **/"],"sourceRoot":""}