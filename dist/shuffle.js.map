{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 33fe7badce065d9fe5f8","webpack:///./src/index.js","webpack:///./src/shuffle.js","webpack:///./~/custom-event-polyfill/custom-event-polyfill.js","webpack:///./~/matches-selector/index.js","webpack:///./~/array-uniq/index.js","webpack:///./~/xtend/immutable.js","webpack:///./~/throttleit/index.js","webpack:///./~/array-parallel/index.js","webpack:///./src/point.js","webpack:///./src/get-number.js","webpack:///./src/shuffle-item.js","webpack:///./src/classes.js","webpack:///./src/get-number-style.js","webpack:///./src/computed-size.js","webpack:///./src/sorter.js","webpack:///./src/on-transition-end.js","webpack:///./src/layout.js"],"names":["module","exports","require","default","toArray","arrayLike","Array","prototype","slice","call","arrayMax","array","Math","max","apply","arrayIncludes","obj","arguments","length","indexOf","id","Shuffle","element","options","useSizer","lastSort","group","lastFilter","ALL_ITEMS","isEnabled","isDestroyed","isInitialized","_transitions","isTransitioning","_queue","_getElementOption","TypeError","_init","items","_getItems","sizer","classList","add","Classes","BASE","_initItems","_onResize","_getResizeFunction","window","addEventListener","containerCss","getComputedStyle","containerWidth","getSize","width","_validateStyles","_setColumns","filter","initialSort","offsetWidth","_setTransitions","style","transition","speed","easing","resizeFunction","_handleResize","bind","throttle","throttleTime","option","querySelector","nodeType","jquery","styles","position","overflow","category","collection","set","_getFilteredSets","_toggleFilterClasses","visible","hidden","forEach","item","_doesPassFilter","push","attr","getAttribute","FILTER_ATTRIBUTE_KEY","keys","delimeter","split","JSON","parse","isArray","some","show","hide","init","dispose","visibleItems","_getFilteredItems","str","useTransforms","children","el","itemSelector","map","by","isVisible","gutterSize","size","columnWidth","gutterWidth","gutter","_getGutterSize","_getColumnSize","calculatedColumns","abs","round","columnThreshold","cols","floor","colWidth","height","_getContainerSize","positions","index","min","staggerAmount","staggerAmountMax","name","details","shuffle","dispatchEvent","CustomEvent","bubbles","cancelable","detail","i","count","currPos","point","currScale","scale","itemSize","pos","_getItemPosition","callback","transitionDelay","applyCss","Css","VISIBLE","after","equals","Scale","before","_getStaggerAmount","gridSize","total","threshold","buffer","_getConcealedItems","HIDDEN","update","x","y","transform","left","top","itemCallback","done","evt","opts","_getStylesForTransition","_whenTransitionDone","_cancelMovement","hasSpeed","hasQueue","_startTransitions","_styleImmediately","_dispatchLayout","transitions","callbacks","_getTransitionFunction","_movementFinished","objects","elements","_skipTransitions","_dispatch","EventType","LAYOUT","sortObj","_filter","_shrink","_updateItemCount","sort","_resetCols","showHidden","concealed","_layout","_processQueue","_setContainerSize","isOnlyLayout","newItems","concat","_updateItemsOrder","isUpdateLayout","oldItems","getItemByElement","handleLayout","removeEventListener","_disposeItems","parentNode","removeChild","REMOVED","remove","removeAttribute","includeMargins","marginLeft","marginRight","marginTop","marginBottom","zero","data","duration","transitionDuration","delay","ShuffleItem","__Point","__sorter","__getColumnSpan","__getAvailablePositions","__getShortColumn","Point","a","b","getNumber","value","parseFloat","addClasses","SHUFFLE_ITEM","INITIAL","classes","className","key","removeClasses","visibility","opacity","getNumberStyle","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","document","body","documentElement","e","createElement","cssText","appendChild","ret","sorter","randomize","tmp","current","random","defaults","reverse","arr","original","revert","valA","valB","undefined","onTransitionEnd","cancelTransitionEnd","eventName","uniqueId","listener","currentTarget","target","getItemPosition","getColumnSpan","getAvailablePositions","getShortColumn","arrayMin","span","setY","shortColumnIndex","setHeight","itemWidth","columns","columnSpan","ceil","available","minPosition","len"],"mappings":"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qN,uBAAR;AACArN,SAAQsN,gBAAR;;mBAEetN,O;;;;;;AChnCf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAmC;AACnC;;;;;;;AC3CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA,E;;;;;;AC5BA;;AAEA;;AAEA;AACA;AACA;;AAEA,iBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAE;AACF;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,EAAC;AACD;AACA;;;;;;;;AC7DA;;AAEA;;AAEA;AACA;;AAEA,oBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AClBA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,aAAY,SAAS;AACrB;;AAEA;AACA,iCAAgC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;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","file":"shuffle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"shuffle\"] = factory();\n\telse\n\t\troot[\"shuffle\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 33fe7badce065d9fe5f8\n **/","module.exports = require('./shuffle').default;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","'use strict';\r\n\r\nimport 'custom-event-polyfill';\r\nimport matches from 'matches-selector';\r\nimport arrayUnique from 'array-uniq';\r\nimport xtend from 'xtend';\r\nimport throttle from 'throttleit';\r\nimport parallel from 'array-parallel';\r\nimport Point from './point';\r\nimport ShuffleItem from './shuffle-item';\r\nimport Classes from './classes';\r\nimport getNumberStyle from './get-number-style';\r\nimport sorter from './sorter';\r\nimport { onTransitionEnd, cancelTransitionEnd } from './on-transition-end';\r\nimport { getItemPosition, getColumnSpan, getAvailablePositions, getShortColumn } from './layout';\r\n\r\nfunction toArray(arrayLike) {\r\n  return Array.prototype.slice.call(arrayLike);\r\n}\r\n\r\nfunction arrayMax(array) {\r\n  return Math.max.apply(Math, array);\r\n}\r\n\r\nfunction arrayIncludes(array, obj) {\r\n  if (arguments.length === 2) {\r\n    return arrayIncludes(array)(obj);\r\n  }\r\n\r\n  return function (obj) {\r\n    return array.indexOf(obj) > -1;\r\n  };\r\n}\r\n\r\n// Used for unique instance variables\r\nlet id = 0;\r\n\r\nclass Shuffle {\r\n\r\n  /**\r\n   * Categorize, sort, and filter a responsive grid of items.\r\n   *\r\n   * @param {Element} element An element which is the parent container for the grid items.\r\n   * @param {Object} [options=Shuffle.options] Options object.\r\n   * @constructor\r\n   */\r\n  constructor(element, options = {}) {\r\n    this.options = xtend(Shuffle.options, options);\r\n\r\n    this.useSizer = false;\r\n    this.lastSort = {};\r\n    this.group = this.lastFilter = Shuffle.ALL_ITEMS;\r\n    this.isEnabled = true;\r\n    this.isDestroyed = false;\r\n    this.isInitialized = false;\r\n    this._transitions = [];\r\n    this.isTransitioning = false;\r\n    this._queue = [];\r\n\r\n    element = this._getElementOption(element);\r\n\r\n    if (!element) {\r\n      throw new TypeError('Shuffle needs to be initialized with an element.');\r\n    }\r\n\r\n    this.element = element;\r\n    this.id = 'shuffle_' + id++;\r\n\r\n    this._init();\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  _init() {\r\n    this.items = this._getItems();\r\n\r\n    this.options.sizer = this._getElementOption(this.options.sizer);\r\n\r\n    if (this.options.sizer) {\r\n      this.useSizer = true;\r\n    }\r\n\r\n    // Add class and invalidate styles\r\n    this.element.classList.add(Shuffle.Classes.BASE);\r\n\r\n    // Set initial css for each item\r\n    this._initItems();\r\n\r\n    // Bind resize events\r\n    this._onResize = this._getResizeFunction();\r\n    window.addEventListener('resize', this._onResize);\r\n\r\n    // Get container css all in one request. Causes reflow\r\n    var containerCss = window.getComputedStyle(this.element, null);\r\n    var containerWidth = Shuffle.getSize(this.element).width;\r\n\r\n    // Add styles to the container if it doesn't have them.\r\n    this._validateStyles(containerCss);\r\n\r\n    // We already got the container's width above, no need to cause another\r\n    // reflow getting it again... Calculate the number of columns there will be\r\n    this._setColumns(containerWidth);\r\n\r\n    // Kick off!\r\n    this.filter(this.options.group, this.options.initialSort);\r\n\r\n    // The shuffle items haven't had transitions set on them yet so the user\r\n    // doesn't see the first layout. Set them now that the first layout is done.\r\n    // First, however, a synchronous layout must be caused for the previous\r\n    // styles to be applied without transitions.\r\n    this.element.offsetWidth; // jshint ignore: line\r\n    this._setTransitions();\r\n    this.element.style.transition = 'height ' + this.options.speed + 'ms ' + this.options.easing;\r\n  }\r\n\r\n  /**\r\n   * Returns a throttled and proxied function for the resize handler.\r\n   * @return {Function}\r\n   * @private\r\n   */\r\n  _getResizeFunction() {\r\n    var resizeFunction = this._handleResize.bind(this);\r\n    return this.options.throttle ?\r\n        this.options.throttle(resizeFunction, this.options.throttleTime) :\r\n        resizeFunction;\r\n  }\r\n\r\n  /**\r\n   * Retrieve an element from an option.\r\n   * @param {string|jQuery|Element} option The option to check.\r\n   * @return {?Element} The plain element or null.\r\n   * @private\r\n   */\r\n  _getElementOption(option) {\r\n    // If column width is a string, treat is as a selector and search for the\r\n    // sizer element within the outermost container\r\n    if (typeof option === 'string') {\r\n      return this.element.querySelector(option);\r\n\r\n    // Check for an element\r\n    } else if (option && option.nodeType && option.nodeType === 1) {\r\n      return option;\r\n\r\n    // Check for jQuery object\r\n    } else if (option && option.jquery) {\r\n      return option[0];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Ensures the shuffle container has the css styles it needs applied to it.\r\n   * @param {Object} styles Key value pairs for position and overflow.\r\n   * @private\r\n   */\r\n  _validateStyles(styles) {\r\n    // Position cannot be static.\r\n    if (styles.position === 'static') {\r\n      this.element.style.position = 'relative';\r\n    }\r\n\r\n    // Overflow has to be hidden.\r\n    if (styles.overflow !== 'hidden') {\r\n      this.element.style.overflow = 'hidden';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Filter the elements by a category.\r\n   * @param {string} [category] Category to filter by. If it's given, the last\r\n   *     category will be used to filter the items.\r\n   * @param {Array} [collection] Optionally filter a collection. Defaults to\r\n   *     all the items.\r\n   * @return {!{visible: Array, hidden: Array}}\r\n   * @private\r\n   */\r\n  _filter(category = this.lastFilter, collection = this.items) {\r\n    var set = this._getFilteredSets(category, collection);\r\n\r\n    // Individually add/remove hidden/visible classes\r\n    this._toggleFilterClasses(set);\r\n\r\n    // Save the last filter in case elements are appended.\r\n    this.lastFilter = category;\r\n\r\n    // This is saved mainly because providing a filter function (like searching)\r\n    // will overwrite the `lastFilter` property every time its called.\r\n    if (typeof category === 'string') {\r\n      this.group = category;\r\n    }\r\n\r\n    return set;\r\n  }\r\n\r\n  /**\r\n   * Returns an object containing the visible and hidden elements.\r\n   * @param {string|Function} category Category or function to filter by.\r\n   * @param {Array.<Element>} items A collection of items to filter.\r\n   * @return {!{visible: Array, hidden: Array}}\r\n   * @private\r\n   */\r\n  _getFilteredSets(category, items) {\r\n    let visible = [];\r\n    let hidden = [];\r\n\r\n    // category === 'all', add visible class to everything\r\n    if (category === Shuffle.ALL_ITEMS) {\r\n      visible = items;\r\n\r\n    // Loop through each item and use provided function to determine\r\n    // whether to hide it or not.\r\n    } else {\r\n      items.forEach((item) => {\r\n        if (this._doesPassFilter(category, item.element)) {\r\n          visible.push(item);\r\n        } else {\r\n          hidden.push(item);\r\n        }\r\n      });\r\n    }\r\n\r\n    return {\r\n      visible,\r\n      hidden,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Test an item to see if it passes a category.\r\n   * @param {string|Function} category Category or function to filter by.\r\n   * @param {Element} element An element to test.\r\n   * @return {boolean} Whether it passes the category/filter.\r\n   * @private\r\n   */\r\n  _doesPassFilter(category, element) {\r\n\r\n    if (typeof category === 'function') {\r\n      return category.call(element, element, this);\r\n\r\n    // Check each element's data-groups attribute against the given category.\r\n    } else {\r\n      let attr = element.getAttribute('data-' + Shuffle.FILTER_ATTRIBUTE_KEY);\r\n      let keys = this.options.delimeter ?\r\n          attr.split(this.options.delimeter) :\r\n          JSON.parse(attr);\r\n\r\n      if (Array.isArray(category)) {\r\n        return category.some(arrayIncludes(keys));\r\n      }\r\n\r\n      return arrayIncludes(keys, category);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the visible and hidden class names.\r\n   * @param {{visible, hidden}} Object with visible and hidden arrays.\r\n   * @private\r\n   */\r\n  _toggleFilterClasses({ visible, hidden }) {\r\n    visible.forEach((item) => {\r\n      item.show();\r\n    });\r\n\r\n    hidden.forEach((item) => {\r\n      item.hide();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set the initial css for each item\r\n   * @param {Array.<ShuffleItem>} [items] Optionally specifiy at set to initialize.\r\n   * @private\r\n   */\r\n  _initItems(items = this.items) {\r\n    items.forEach((item) => {\r\n      item.init();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove element reference and styles.\r\n   * @private\r\n   */\r\n  _disposeItems(items = this.items) {\r\n    items.forEach((item) => {\r\n      item.dispose();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates the visible item count.\r\n   * @private\r\n   */\r\n  _updateItemCount() {\r\n    this.visibleItems = this._getFilteredItems().length;\r\n  }\r\n\r\n  /**\r\n   * Sets css transform transition on a group of elements. This is not executed\r\n   * at the same time as `item.init` so that transitions don't occur upon\r\n   * initialization of Shuffle.\r\n   * @param {Array.<ShuffleItem>} items Shuffle items to set transitions on.\r\n   * @private\r\n   */\r\n  _setTransitions(items = this.items) {\r\n    let speed = this.options.speed;\r\n    let easing = this.options.easing;\r\n\r\n    var str;\r\n    if (this.options.useTransforms) {\r\n      str = 'transform ' + speed + 'ms ' + easing +\r\n        ', opacity ' + speed + 'ms ' + easing;\r\n    } else {\r\n      str = 'top ' + speed + 'ms ' + easing +\r\n        ', left ' + speed + 'ms ' + easing +\r\n        ', opacity ' + speed + 'ms ' + easing;\r\n    }\r\n\r\n    items.forEach((item) => {\r\n      item.element.style.transition = str;\r\n    });\r\n  }\r\n\r\n  _getItems() {\r\n    return toArray(this.element.children)\r\n      .filter(el => matches(el, this.options.itemSelector))\r\n      .map(el => new ShuffleItem(el));\r\n  }\r\n\r\n  /**\r\n   * When new elements are added to the shuffle container, update the array of\r\n   * items because that is the order `_layout` calls them.\r\n   */\r\n  _updateItemsOrder() {\r\n    let children = this.element.children;\r\n    this.items = sorter(this.items, {\r\n      by(element) {\r\n        return Array.prototype.indexOf.call(children, element);\r\n      },\r\n    });\r\n  }\r\n\r\n  _getFilteredItems() {\r\n    return this.items.filter(item => item.isVisible);\r\n  }\r\n\r\n  _getConcealedItems() {\r\n    return this.items.filter(item => !item.isVisible);\r\n  }\r\n\r\n  /**\r\n   * Returns the column size, based on column width and sizer options.\r\n   * @param {number} containerWidth Size of the parent container.\r\n   * @param {number} gutterSize Size of the gutters.\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _getColumnSize(containerWidth, gutterSize) {\r\n    var size;\r\n\r\n    // If the columnWidth property is a function, then the grid is fluid\r\n    if (typeof this.options.columnWidth === 'function') {\r\n      size = this.options.columnWidth(containerWidth);\r\n\r\n    // columnWidth option isn't a function, are they using a sizing element?\r\n    } else if (this.useSizer) {\r\n      size = Shuffle.getSize(this.options.sizer).width;\r\n\r\n    // if not, how about the explicitly set option?\r\n    } else if (this.options.columnWidth) {\r\n      size = this.options.columnWidth;\r\n\r\n    // or use the size of the first item\r\n    } else if (this.items.length > 0) {\r\n      size = Shuffle.getSize(this.items[0].element, true).width;\r\n\r\n    // if there's no items, use size of container\r\n    } else {\r\n      size = containerWidth;\r\n    }\r\n\r\n    // Don't let them set a column width of zero.\r\n    if (size === 0) {\r\n      size = containerWidth;\r\n    }\r\n\r\n    return size + gutterSize;\r\n  }\r\n\r\n  /**\r\n   * Returns the gutter size, based on gutter width and sizer options.\r\n   * @param {number} containerWidth Size of the parent container.\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _getGutterSize(containerWidth) {\r\n    var size;\r\n    if (typeof this.options.gutterWidth === 'function') {\r\n      size = this.options.gutterWidth(containerWidth);\r\n    } else if (this.useSizer) {\r\n      size = getNumberStyle(this.options.sizer, 'marginLeft');\r\n    } else {\r\n      size = this.options.gutterWidth;\r\n    }\r\n\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * Calculate the number of columns to be used. Gets css if using sizer element.\r\n   * @param {number} [containerWidth] Optionally specify a container width if\r\n   *    it's already available.\r\n   */\r\n  _setColumns(containerWidth = Shuffle.getSize(this.element).width) {\r\n    var gutter = this._getGutterSize(containerWidth);\r\n    var columnWidth = this._getColumnSize(containerWidth, gutter);\r\n    var calculatedColumns = (containerWidth + gutter) / columnWidth;\r\n\r\n    // Widths given from getStyles are not precise enough...\r\n    if (Math.abs(Math.round(calculatedColumns) - calculatedColumns) <\r\n        this.options.columnThreshold) {\r\n      // e.g. calculatedColumns = 11.998876\r\n      calculatedColumns = Math.round(calculatedColumns);\r\n    }\r\n\r\n    this.cols = Math.max(Math.floor(calculatedColumns), 1);\r\n    this.containerWidth = containerWidth;\r\n    this.colWidth = columnWidth;\r\n  }\r\n\r\n  /**\r\n   * Adjust the height of the grid\r\n   */\r\n  _setContainerSize() {\r\n    this.element.style.height = this._getContainerSize() + 'px';\r\n  }\r\n\r\n  /**\r\n   * Based on the column heights, it returns the biggest one.\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _getContainerSize() {\r\n    return arrayMax(this.positions);\r\n  }\r\n\r\n  /**\r\n   * Get the clamped stagger amount.\r\n   * @param {number} index Index of the item to be staggered.\r\n   * @return {number}\r\n   */\r\n  _getStaggerAmount(index) {\r\n    return Math.min(index * this.options.staggerAmount, this.options.staggerAmountMax);\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Whether the event was prevented or not.\r\n   */\r\n  _dispatch(name, details = {}) {\r\n    if (this.isDestroyed) {\r\n      return;\r\n    }\r\n\r\n    details.shuffle = this;\r\n    return !this.element.dispatchEvent(new CustomEvent(name, {\r\n      bubbles: true,\r\n      cancelable: false,\r\n      detail: details,\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Zeros out the y columns array, which is used to determine item placement.\r\n   * @private\r\n   */\r\n  _resetCols() {\r\n    var i = this.cols;\r\n    this.positions = [];\r\n    while (i--) {\r\n      this.positions.push(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loops through each item that should be shown and calculates the x, y position.\r\n   * @param {Array.<ShuffleItem>} items Array of items that will be shown/layed\r\n   *     out in order in their array.\r\n   */\r\n  _layout(items) {\r\n    let count = 0;\r\n    items.forEach((item) => {\r\n      var currPos = item.point;\r\n      var currScale = item.scale;\r\n      var itemSize = Shuffle.getSize(item.element, true);\r\n      var pos = this._getItemPosition(itemSize);\r\n\r\n      function callback() {\r\n        item.element.style.transitionDelay = '';\r\n        item.applyCss(ShuffleItem.Css.VISIBLE.after);\r\n      }\r\n\r\n      // If the item will not change its position, do not add it to the render\r\n      // queue. Transitions don't fire when setting a property to the same value.\r\n      if (Point.equals(currPos, pos) && currScale === ShuffleItem.Scale.VISIBLE) {\r\n        callback();\r\n        return;\r\n      }\r\n\r\n      item.point = pos;\r\n      item.scale = ShuffleItem.Scale.VISIBLE;\r\n\r\n      // Use xtend here to clone the object so that the `before` object isn't\r\n      // modified when the transition delay is added.\r\n      let styles = xtend(ShuffleItem.Css.VISIBLE.before);\r\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\r\n\r\n      this._queue.push({\r\n        item,\r\n        styles,\r\n        callback,\r\n      });\r\n\r\n      count++;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Determine the location of the next item, based on its size.\r\n   * @param {{width: number, height: number}} itemSize Object with width and height.\r\n   * @return {Point}\r\n   * @private\r\n   */\r\n  _getItemPosition(itemSize) {\r\n    return getItemPosition({\r\n      itemSize,\r\n      positions: this.positions,\r\n      gridSize: this.colWidth,\r\n      total: this.cols,\r\n      threshold: this.options.columnThreshold,\r\n      buffer: this.options.buffer,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Hides the elements that don't match our filter.\r\n   * @param {Array.<ShuffleItem>} collection Collection to shrink.\r\n   * @private\r\n   */\r\n  _shrink(collection = this._getConcealedItems()) {\r\n    let count = 0;\r\n    collection.forEach((item) => {\r\n      function callback() {\r\n        item.applyCss(ShuffleItem.Css.HIDDEN.after);\r\n      }\r\n\r\n      // Continuing would add a transitionend event listener to the element, but\r\n      // that listener would not execute because the transform and opacity would\r\n      // stay the same.\r\n      // The callback is executed here because it is not guaranteed to be called\r\n      // after the transitionend event because the transitionend could be\r\n      // canceled if another animation starts.\r\n      if (item.scale === ShuffleItem.Scale.HIDDEN) {\r\n        callback();\r\n        return;\r\n      }\r\n\r\n      item.scale = ShuffleItem.Scale.HIDDEN;\r\n\r\n      let styles = xtend(ShuffleItem.Css.HIDDEN.before);\r\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\r\n\r\n      this._queue.push({\r\n        item,\r\n        styles,\r\n        callback,\r\n      });\r\n\r\n      count++;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Resize handler.\r\n   * @private\r\n   */\r\n  _handleResize() {\r\n    // If shuffle is disabled, destroyed, don't do anything\r\n    if (!this.isEnabled || this.isDestroyed) {\r\n      return;\r\n    }\r\n\r\n    // Will need to check height in the future if it's layed out horizontaly\r\n    var containerWidth = Shuffle.getSize(this.element).width;\r\n\r\n    // containerWidth hasn't changed, don't do anything\r\n    if (containerWidth === this.containerWidth) {\r\n      return;\r\n    }\r\n\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Returns styles which will be applied to the an item for a transition.\r\n   * @param {Object} obj Transition options.\r\n   * @return {!Object} Transforms for transitions, left/top for animate.\r\n   * @private\r\n   */\r\n  _getStylesForTransition({ item, styles }) {\r\n    if (!styles.transitionDelay) {\r\n      styles.transitionDelay = '0ms';\r\n    }\r\n\r\n    let x = item.point.x;\r\n    let y = item.point.y;\r\n\r\n    if (this.options.useTransforms) {\r\n      styles.transform = `translate(${x}px, ${y}px) scale(${item.scale})`;\r\n    } else {\r\n      styles.left = x + 'px';\r\n      styles.top = y + 'px';\r\n    }\r\n\r\n    return styles;\r\n  }\r\n\r\n  /**\r\n   * Listen for the transition end on an element and execute the itemCallback\r\n   * when it finishes.\r\n   * @param {Element} element Element to listen on.\r\n   * @param {Function} itemCallback Callback for the item.\r\n   * @param {Function} done Callback to notify `parallel` that this one is done.\r\n   */\r\n  _whenTransitionDone(element, itemCallback, done) {\r\n    let id = onTransitionEnd(element, (evt) => {\r\n      itemCallback();\r\n      done(null, evt);\r\n    });\r\n\r\n    this._transitions.push(id);\r\n  }\r\n\r\n  /**\r\n   * Return a function which will set CSS styles and call the `done` function\r\n   * when (if) the transition finishes.\r\n   * @param {Object} opts Transition object.\r\n   * @return {Function} A function to be called with a `done` function.\r\n   */\r\n  _getTransitionFunction(opts) {\r\n    return (done) => {\r\n      opts.item.applyCss(this._getStylesForTransition(opts));\r\n      this._whenTransitionDone(opts.item.element, opts.callback, done);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Execute the styles gathered in the style queue. This applies styles to elements,\r\n   * triggering transitions.\r\n   * @private\r\n   */\r\n  _processQueue() {\r\n    if (this.isTransitioning) {\r\n      this._cancelMovement();\r\n    }\r\n\r\n    let hasSpeed = this.options.speed > 0;\r\n    let hasQueue = this._queue.length > 0;\r\n\r\n    if (hasQueue && hasSpeed && this.isInitialized) {\r\n      this._startTransitions(this._queue);\r\n\r\n    } else if (hasQueue) {\r\n      this._styleImmediately(this._queue);\r\n      this._dispatchLayout();\r\n\r\n    // A call to layout happened, but none of the newly visible items will\r\n    // change position or the transition duration is zero, which will not trigger\r\n    // the transitionend event.\r\n    } else {\r\n      this._dispatchLayout();\r\n    }\r\n\r\n    // Remove everything in the style queue\r\n    this._queue.length = 0;\r\n  }\r\n\r\n  /**\r\n   * Wait for each transition to finish, the emit the layout event.\r\n   * @param {Array.<Object>} transitions Array of transition objects.\r\n   */\r\n  _startTransitions(transitions) {\r\n    // Set flag that shuffle is currently in motion.\r\n    this.isTransitioning = true;\r\n\r\n    // Create an array of functions to be called.\r\n    let callbacks = transitions.map(obj => this._getTransitionFunction(obj));\r\n\r\n    parallel(callbacks, this._movementFinished.bind(this));\r\n  }\r\n\r\n  _cancelMovement() {\r\n    // Remove the transition end event for each listener.\r\n    this._transitions.forEach(cancelTransitionEnd);\r\n\r\n    // Reset the array.\r\n    this._transitions.length = 0;\r\n\r\n    // Show it's no longer active.\r\n    this.isTransitioning = false;\r\n  }\r\n\r\n  /**\r\n   * Apply styles without a transition.\r\n   * @param {Array.<Object>} objects Array of transition objects.\r\n   * @private\r\n   */\r\n  _styleImmediately(objects) {\r\n    if (objects.length) {\r\n      let elements = objects.map(obj => obj.item.element);\r\n\r\n      Shuffle._skipTransitions(elements, () => {\r\n        objects.forEach((obj) => {\r\n          obj.item.applyCss(this._getStylesForTransition(obj));\r\n          obj.callback();\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  _movementFinished() {\r\n    this._transitions.length = 0;\r\n    this.isTransitioning = false;\r\n    this._dispatchLayout();\r\n  }\r\n\r\n  _dispatchLayout() {\r\n    this._dispatch(Shuffle.EventType.LAYOUT);\r\n  }\r\n\r\n  /**\r\n   * The magic. This is what makes the plugin 'shuffle'\r\n   * @param {string|Function|Array.<string>} [category] Category to filter by.\r\n   *     Can be a function, string, or array of strings.\r\n   * @param {Object} [sortObj] A sort object which can sort the visible set\r\n   */\r\n  filter(category, sortObj) {\r\n    if (!this.isEnabled) {\r\n      return;\r\n    }\r\n\r\n    if (!category || (category && category.length === 0)) {\r\n      category = Shuffle.ALL_ITEMS;\r\n    }\r\n\r\n    this._filter(category);\r\n\r\n    // Shrink each hidden item\r\n    this._shrink();\r\n\r\n    // How many visible elements?\r\n    this._updateItemCount();\r\n\r\n    // Update transforms on visible elements so they will animate to their new positions.\r\n    this.sort(sortObj);\r\n  }\r\n\r\n  /**\r\n   * Gets the visible elements, sorts them, and passes them to layout.\r\n   * @param {Object} opts the options object for the sorted plugin\r\n   */\r\n  sort(opts = this.lastSort) {\r\n    if (!this.isEnabled) {\r\n      return;\r\n    }\r\n\r\n    this._resetCols();\r\n\r\n    var items = this._getFilteredItems();\r\n\r\n    \r\n    items = sorter(items, opts);\r\n\r\n\r\n    /**\r\n     * We're getting the concealed items so that the layout displays all items\r\n     */\r\n    if (this.options.showHidden === true){\r\n      var concealed = this._getConcealedItems();\r\n      \r\n      if(concealed.length > 0) {\r\n        for(var i = 0; i < concealed.length; i++) {\r\n          items.push(concealed[i]);\r\n        }\r\n        \r\n      }    \r\n    }\r\n\r\n\r\n    this._layout(items);\r\n\r\n\r\n\r\n    // `_layout` always happens after `_shrink`, so it's safe to process the style\r\n    // queue here with styles from the shrink method.\r\n    this._processQueue();\r\n\r\n    // Adjust the height of the container.\r\n    this._setContainerSize();\r\n\r\n    this.lastSort = opts;\r\n  }\r\n\r\n  /**\r\n   * Reposition everything.\r\n   * @param {boolean} isOnlyLayout If true, column and gutter widths won't be\r\n   *     recalculated.\r\n   */\r\n  update(isOnlyLayout) {\r\n    if (this.isEnabled) {\r\n\r\n      if (!isOnlyLayout) {\r\n        // Get updated colCount\r\n        this._setColumns();\r\n      }\r\n\r\n      // Layout items\r\n      this.sort();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Use this instead of `update()` if you don't need the columns and gutters updated\r\n   * Maybe an image inside `shuffle` loaded (and now has a height), which means calculations\r\n   * could be off.\r\n   */\r\n  layout() {\r\n    this.update(true);\r\n  }\r\n\r\n  /**\r\n   * New items have been appended to shuffle. Mix them in with the current\r\n   * filter or sort status.\r\n   * @param {Array.<Element>} newItems Collection of new items.\r\n   */\r\n  add(newItems) {\r\n    newItems = arrayUnique(newItems).map(el => new ShuffleItem(el));\r\n\r\n    // Add classes and set initial positions.\r\n    this._initItems(newItems);\r\n\r\n    // Add transition to each item.\r\n    this._setTransitions(newItems);\r\n\r\n    // Update the list of items.\r\n    this.items = this.items.concat(newItems);\r\n    this._updateItemsOrder();\r\n    this.filter(this.lastFilter);\r\n  }\r\n\r\n  /**\r\n   * Disables shuffle from updating dimensions and layout on resize\r\n   */\r\n  disable() {\r\n    this.isEnabled = false;\r\n  }\r\n\r\n  /**\r\n   * Enables shuffle again\r\n   * @param {boolean} [isUpdateLayout=true] if undefined, shuffle will update columns and gutters\r\n   */\r\n  enable(isUpdateLayout) {\r\n    this.isEnabled = true;\r\n    if (isUpdateLayout !== false) {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove 1 or more shuffle items\r\n   * @param {Array.<Element>} collection An array containing one or more\r\n   *     elements in shuffle\r\n   * @return {Shuffle} The shuffle object\r\n   */\r\n  remove(collection) {\r\n    if (!collection.length) {\r\n      return;\r\n    }\r\n\r\n    collection = arrayUnique(collection);\r\n\r\n    let oldItems = collection\r\n      .map(element => this.getItemByElement(element))\r\n      .filter(item => !!item);\r\n\r\n    let handleLayout = () => {\r\n      this.element.removeEventListener(Shuffle.EventType.LAYOUT, handleLayout);\r\n      this._disposeItems(oldItems);\r\n\r\n      // Remove the collection in the callback\r\n      collection.forEach((element) => {\r\n        element.parentNode.removeChild(element);\r\n      });\r\n\r\n      this._dispatch(Shuffle.EventType.REMOVED, { collection });\r\n\r\n      // Let it get garbage collected\r\n      collection = null;\r\n      oldItems = null;\r\n    };\r\n\r\n    // Hide collection first.\r\n    this._toggleFilterClasses({\r\n      visible: [],\r\n      hidden: oldItems,\r\n    });\r\n\r\n    this._shrink(oldItems);\r\n\r\n    this.sort();\r\n\r\n    // Update the list of items here because `remove` could be called again\r\n    // with an item that is in the process of being removed.\r\n    this.items = this.items.filter(item => !arrayIncludes(oldItems, item));\r\n    this._updateItemCount();\r\n\r\n    this.element.addEventListener(Shuffle.EventType.LAYOUT, handleLayout);\r\n  }\r\n\r\n  /**\r\n   * Retrieve a shuffle item by its element.\r\n   * @param {Element} element Element to look for.\r\n   * @return {?ShuffleItem} A shuffle item or null if it's not found.\r\n   */\r\n  getItemByElement(element) {\r\n    for (var i = this.items.length - 1; i >= 0; i--) {\r\n      if (this.items[i].element === element) {\r\n        return this.items[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Destroys shuffle, removes events, styles, and classes\r\n   */\r\n  destroy() {\r\n    this._cancelMovement();\r\n    window.removeEventListener('resize', this._onResize);\r\n\r\n    // Reset container styles\r\n    this.element.classList.remove('shuffle');\r\n    this.element.removeAttribute('style');\r\n\r\n    // Reset individual item styles\r\n    this._disposeItems();\r\n\r\n    // Null DOM references\r\n    this.items = null;\r\n    this.options.sizer = null;\r\n    this.element = null;\r\n    this._transitions = null;\r\n\r\n    // Set a flag so if a debounced resize has been triggered,\r\n    // it can first check if it is actually isDestroyed and not doing anything\r\n    this.isDestroyed = true;\r\n  }\r\n\r\n  /**\r\n   * Returns the outer width of an element, optionally including its margins.\r\n   *\r\n   * There are a few different methods for getting the width of an element, none of\r\n   * which work perfectly for all Shuffle's use cases.\r\n   *\r\n   * 1. getBoundingClientRect() `left` and `right` properties.\r\n   *   - Accounts for transform scaled elements, making it useless for Shuffle\r\n   *   elements which have shrunk.\r\n   * 2. The `offsetWidth` property.\r\n   *   - This value stays the same regardless of the elements transform property,\r\n   *   however, it does not return subpixel values.\r\n   * 3. getComputedStyle()\r\n   *   - This works great Chrome, Firefox, Safari, but IE<=11 does not include\r\n   *   padding and border when box-sizing: border-box is set, requiring a feature\r\n   *   test and extra work to add the padding back for IE and other browsers which\r\n   *   follow the W3C spec here.\r\n   *\r\n   * @param {Element} element The element.\r\n   * @param {boolean} [includeMargins] Whether to include margins. Default is false.\r\n   * @return {{width: number, height: number}} The width and height.\r\n   */\r\n  static getSize(element, includeMargins) {\r\n    // Store the styles so that they can be used by others without asking for it again.\r\n    var styles = window.getComputedStyle(element, null);\r\n    var width = getNumberStyle(element, 'width', styles);\r\n    var height = getNumberStyle(element, 'height', styles);\r\n\r\n    if (includeMargins) {\r\n      var marginLeft = getNumberStyle(element, 'marginLeft', styles);\r\n      var marginRight = getNumberStyle(element, 'marginRight', styles);\r\n      var marginTop = getNumberStyle(element, 'marginTop', styles);\r\n      var marginBottom = getNumberStyle(element, 'marginBottom', styles);\r\n      width += marginLeft + marginRight;\r\n      height += marginTop + marginBottom;\r\n    }\r\n\r\n    return {\r\n      width,\r\n      height,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Change a property or execute a function which will not have a transition\r\n   * @param {Array.<Element>} elements DOM elements that won't be transitioned.\r\n   * @param {Function} callback A function which will be called while transition\r\n   *     is set to 0ms.\r\n   * @private\r\n   */\r\n  static _skipTransitions(elements, callback) {\r\n    let zero = '0ms';\r\n\r\n    // Save current duration and delay.\r\n    let data = elements.map((element) => {\r\n      let style = element.style;\r\n      let duration = style.transitionDuration;\r\n      let delay = style.transitionDelay;\r\n\r\n      // Set the duration to zero so it happens immediately\r\n      style.transitionDuration = zero;\r\n      style.transitionDelay = zero;\r\n\r\n      return {\r\n        duration,\r\n        delay,\r\n      };\r\n    });\r\n\r\n    callback();\r\n\r\n    // Cause reflow.\r\n    elements[0].offsetWidth; // jshint ignore:line\r\n\r\n    // Put the duration back\r\n    elements.forEach((element, i) => {\r\n      element.style.transitionDuration = data[i].duration;\r\n      element.style.transitionDelay = data[i].delay;\r\n    });\r\n  }\r\n}\r\n\r\nShuffle.ShuffleItem = ShuffleItem;\r\n\r\nShuffle.ALL_ITEMS = 'all';\r\nShuffle.FILTER_ATTRIBUTE_KEY = 'groups';\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nShuffle.EventType = {\r\n  LAYOUT: 'shuffle:layout',\r\n  REMOVED: 'shuffle:removed',\r\n};\r\n\r\n/** @enum {string} */\r\nShuffle.Classes = Classes;\r\n\r\n// Overrideable options\r\nShuffle.options = {\r\n  // Initial filter group.\r\n  group: Shuffle.ALL_ITEMS,\r\n\r\n  // Transition/animation speed (milliseconds).\r\n  speed: 250,\r\n\r\n  // CSS easing function to use.\r\n  easing: 'ease',\r\n\r\n  // e.g. '.picture-item'.\r\n  itemSelector: '*',\r\n\r\n  // Element or selector string. Use an element to determine the size of columns\r\n  // and gutters.\r\n  sizer: null,\r\n\r\n  // A static number or function that tells the plugin how wide the gutters\r\n  // between columns are (in pixels).\r\n  gutterWidth: 0,\r\n\r\n  // A static number or function that returns a number which tells the plugin\r\n  // how wide the columns are (in pixels).\r\n  columnWidth: 0,\r\n\r\n  // If your group is not json, and is comma delimeted, you could set delimeter\r\n  // to ','.\r\n  delimeter: null,\r\n\r\n  // Useful for percentage based heights when they might not always be exactly\r\n  // the same (in pixels).\r\n  buffer: 0,\r\n\r\n  // Reading the width of elements isn't precise enough and can cause columns to\r\n  // jump between values.\r\n  columnThreshold: 0.01,\r\n\r\n  // Shuffle can be isInitialized with a sort object. It is the same object\r\n  // given to the sort method.\r\n  initialSort: null,\r\n\r\n  // By default, shuffle will throttle resize events. This can be changed or\r\n  // removed.\r\n  throttle: throttle,\r\n\r\n  // How often shuffle can be called on resize (in milliseconds).\r\n  throttleTime: 300,\r\n\r\n  // Transition delay offset for each item in milliseconds.\r\n  staggerAmount: 15,\r\n\r\n  // Maximum stagger delay in milliseconds.\r\n  staggerAmountMax: 250,\r\n\r\n  // Whether to use transforms or absolute positioning.\r\n  useTransforms: true,\r\n\r\n  // Include hidden elements in container sizing\r\n  showHidden: false,\r\n};\r\n\r\n// Expose for testing. Hack at your own risk.\r\nShuffle.__Point = Point;\r\nShuffle.__sorter = sorter;\r\nShuffle.__getColumnSpan = getColumnSpan;\r\nShuffle.__getAvailablePositions = getAvailablePositions;\r\nShuffle.__getShortColumn = getShortColumn;\r\n\r\nexport default Shuffle;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shuffle.js\n **/","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\ntry {\n    var ce = new window.CustomEvent('test');\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n        // IE has problems with .preventDefault() on custom events\n        // http://stackoverflow.com/questions/23349191\n        throw new Error('Could not prevent default');\n    }\n} catch(e) {\n  var CustomEvent = function(event, params) {\n    var evt, origPrevent;\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    };\n\n    evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    origPrevent = evt.preventDefault;\n    evt.preventDefault = function () {\n      origPrevent.call(this);\n      try {\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () {\n            return true;\n          }\n        });\n      } catch(e) {\n        this.defaultPrevented = true;\n      }\n    };\n    return evt;\n  };\n\n  CustomEvent.prototype = window.Event.prototype;\n  window.CustomEvent = CustomEvent; // expose definition to window\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/custom-event-polyfill/custom-event-polyfill.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nvar proto = Element.prototype;\nvar vendor = proto.matches\n  || proto.matchesSelector\n  || proto.webkitMatchesSelector\n  || proto.mozMatchesSelector\n  || proto.msMatchesSelector\n  || proto.oMatchesSelector;\n\nmodule.exports = match;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match(el, selector) {\n  if (vendor) return vendor.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/matches-selector/index.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\n// there's 3 implementations written in increasing order of efficiency\n\n// 1 - no Set type is defined\nfunction uniqNoSet(arr) {\n\tvar ret = [];\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (ret.indexOf(arr[i]) === -1) {\n\t\t\tret.push(arr[i]);\n\t\t}\n\t}\n\n\treturn ret;\n}\n\n// 2 - a simple Set type is defined\nfunction uniqSet(arr) {\n\tvar seen = new Set();\n\treturn arr.filter(function (el) {\n\t\tif (!seen.has(el)) {\n\t\t\tseen.add(el);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t});\n}\n\n// 3 - a standard Set type is defined and it has a forEach method\nfunction uniqSetWithForEach(arr) {\n\tvar ret = [];\n\n\t(new Set(arr)).forEach(function (el) {\n\t\tret.push(el);\n\t});\n\n\treturn ret;\n}\n\n// V8 currently has a broken implementation\n// https://github.com/joyent/node/issues/8449\nfunction doesForEachActuallyWork() {\n\tvar ret = false;\n\n\t(new Set([true])).forEach(function (el) {\n\t\tret = el;\n\t});\n\n\treturn ret === true;\n}\n\nif ('Set' in global) {\n\tif (typeof Set.prototype.forEach === 'function' && doesForEachActuallyWork()) {\n\t\tmodule.exports = uniqSetWithForEach;\n\t} else {\n\t\tmodule.exports = uniqSet;\n\t}\n} else {\n\tmodule.exports = uniqNoSet;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/array-uniq/index.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xtend/immutable.js\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = throttle;\n\n/**\n * Returns a new function that, when invoked, invokes `func` at most once per `wait` milliseconds.\n *\n * @param {Function} func Function to wrap.\n * @param {Number} wait Number of milliseconds that must elapse between `func` invocations.\n * @return {Function} A new function that wraps the `func` function passed in.\n */\n\nfunction throttle (func, wait) {\n  var ctx, args, rtn, timeoutID; // caching\n  var last = 0;\n\n  return function throttled () {\n    ctx = this;\n    args = arguments;\n    var delta = new Date() - last;\n    if (!timeoutID)\n      if (delta >= wait) call();\n      else timeoutID = setTimeout(call, wait - delta);\n    return rtn;\n  };\n\n  function call () {\n    timeoutID = 0;\n    last = +new Date();\n    rtn = func.apply(ctx, args);\n    ctx = null;\n    args = null;\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/throttleit/index.js\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = function parallel(fns, context, callback) {\n  if (!callback) {\n    if (typeof context === 'function') {\n      callback = context\n      context = null\n    } else {\n      callback = noop\n    }\n  }\n\n  var pending = fns && fns.length\n  if (!pending) return callback(null, []);\n\n  var finished = false\n  var results = new Array(pending)\n\n  fns.forEach(context ? function (fn, i) {\n    fn.call(context, maybeDone(i))\n  } : function (fn, i) {\n    fn(maybeDone(i))\n  })\n\n  function maybeDone(i) {\n    return function (err, result) {\n      if (finished) return;\n\n      if (err) {\n        callback(err, results)\n        finished = true\n        return\n      }\n\n      results[i] = result\n\n      if (!--pending) callback(null, results);\n    }\n  }\n}\n\nfunction noop() {}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/array-parallel/index.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\r\n\r\nimport getNumber from './get-number';\r\n\r\n/**\r\n * Represents a coordinate pair.\r\n * @param {number} [x=0] X.\r\n * @param {number} [y=0] Y.\r\n */\r\nconst Point = function (x, y) {\r\n  this.x = getNumber(x);\r\n  this.y = getNumber(y);\r\n};\r\n\r\n/**\r\n * Whether two points are equal.\r\n * @param {Point} a Point A.\r\n * @param {Point} b Point B.\r\n * @return {boolean}\r\n */\r\nPoint.equals = function (a, b) {\r\n  return a.x === b.x && a.y === b.y;\r\n};\r\n\r\nexport default Point;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/point.js\n **/","'use strict';\r\n\r\n/**\r\n * Always returns a numeric value, given a value. Logic from jQuery's `isNumeric`.\r\n * @param {*} value Possibly numeric value.\r\n * @return {number} `value` or zero if `value` isn't numeric.\r\n */\r\nexport default function getNumber(value) {\r\n  return parseFloat(value) || 0;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/get-number.js\n **/","import Point from './point';\r\nimport Classes from './classes';\r\n\r\nlet id = 0;\r\n\r\nclass ShuffleItem {\r\n  constructor(element) {\r\n    this.id = id++;\r\n    this.element = element;\r\n    this.isVisible = true;\r\n  }\r\n\r\n  show() {\r\n    this.isVisible = true;\r\n    this.element.classList.remove(Classes.HIDDEN);\r\n    this.element.classList.add(Classes.VISIBLE);\r\n  }\r\n\r\n  hide() {\r\n    this.isVisible = false;\r\n    this.element.classList.remove(Classes.VISIBLE);\r\n    this.element.classList.add(Classes.HIDDEN);\r\n  }\r\n\r\n  init() {\r\n    this.addClasses([Classes.SHUFFLE_ITEM, Classes.VISIBLE]);\r\n    this.applyCss(ShuffleItem.Css.INITIAL);\r\n    this.scale = ShuffleItem.Scale.VISIBLE;\r\n    this.point = new Point();\r\n  }\r\n\r\n  addClasses(classes) {\r\n    classes.forEach((className) => {\r\n      this.element.classList.add(className);\r\n    });\r\n  }\r\n\r\n  removeClasses(classes) {\r\n    classes.forEach((className) => {\r\n      this.element.classList.remove(className);\r\n    });\r\n  }\r\n\r\n  applyCss(obj) {\r\n    for (var key in obj) {\r\n      this.element.style[key] = obj[key];\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    this.removeClasses([\r\n      Classes.HIDDEN,\r\n      Classes.VISIBLE,\r\n      Classes.SHUFFLE_ITEM,\r\n    ]);\r\n\r\n    this.element.removeAttribute('style');\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nShuffleItem.Css = {\r\n  INITIAL: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    visibility: 'visible',\r\n    'will-change': 'transform',\r\n  },\r\n  VISIBLE: {\r\n    before: {\r\n      opacity: 1,\r\n      visibility: 'visible',\r\n    },\r\n    after: {},\r\n  },\r\n  HIDDEN: {\r\n    before: {\r\n      opacity: 0,\r\n    },\r\n    after: {\r\n      visibility: 'hidden',\r\n    },\r\n  },\r\n};\r\n\r\nShuffleItem.Scale = {\r\n  VISIBLE: 1,\r\n  HIDDEN: 0.001,\r\n};\r\n\r\nexport default ShuffleItem;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/shuffle-item.js\n **/","export default {\r\n  BASE: 'shuffle',\r\n  SHUFFLE_ITEM: 'shuffle-item',\r\n  VISIBLE: 'shuffle-item--visible',\r\n  HIDDEN: 'shuffle-item--hidden',\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/classes.js\n **/","'use strict';\r\n\r\nimport getNumber from './get-number';\r\nimport COMPUTED_SIZE_INCLUDES_PADDING from './computed-size';\r\n\r\n/**\r\n * Retrieve the computed style for an element, parsed as a float.\r\n * @param {Element} element Element to get style for.\r\n * @param {string} style Style property.\r\n * @param {CSSStyleDeclaration} [styles] Optionally include clean styles to\r\n *     use instead of asking for them again.\r\n * @return {number} The parsed computed value or zero if that fails because IE\r\n *     will return 'auto' when the element doesn't have margins instead of\r\n *     the computed style.\r\n */\r\nexport default function getNumberStyle(element, style,\r\n    styles = window.getComputedStyle(element, null)) {\r\n  var value = getNumber(styles[style]);\r\n\r\n  // Support IE<=11 and W3C spec.\r\n  if (!COMPUTED_SIZE_INCLUDES_PADDING && style === 'width') {\r\n    value += getNumber(styles.paddingLeft) +\r\n      getNumber(styles.paddingRight) +\r\n      getNumber(styles.borderLeftWidth) +\r\n      getNumber(styles.borderRightWidth);\r\n  } else if (!COMPUTED_SIZE_INCLUDES_PADDING && style === 'height') {\r\n    value += getNumber(styles.paddingTop) +\r\n      getNumber(styles.paddingBottom) +\r\n      getNumber(styles.borderTopWidth) +\r\n      getNumber(styles.borderBottomWidth);\r\n  }\r\n\r\n  return value;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/get-number-style.js\n **/","\r\nlet element = document.body || document.documentElement;\r\nlet e = document.createElement('div');\r\ne.style.cssText = 'width:10px;padding:2px;box-sizing:border-box;';\r\nelement.appendChild(e);\r\n\r\nlet width = window.getComputedStyle(e, null).width;\r\nlet ret = width === '10px';\r\n\r\nelement.removeChild(e);\r\n\r\nexport default ret;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/computed-size.js\n **/","'use strict';\r\n\r\nimport xtend from 'xtend';\r\n\r\n// http://stackoverflow.com/a/962890/373422\r\nfunction randomize(array) {\r\n  var tmp;\r\n  var current;\r\n  let top = array.length;\r\n\r\n  if (!top) {\r\n    return array;\r\n  }\r\n\r\n  while (--top) {\r\n    current = Math.floor(Math.random() * (top + 1));\r\n    tmp = array[current];\r\n    array[current] = array[top];\r\n    array[top] = tmp;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nlet defaults = {\r\n  // Use array.reverse() to reverse the results\r\n  reverse: false,\r\n\r\n  // Sorting function\r\n  by: null,\r\n\r\n  // If true, this will skip the sorting and return a randomized order in the array\r\n  randomize: false,\r\n\r\n  // Determines which property of each item in the array is passed to the\r\n  // sorting method.\r\n  key: 'element',\r\n};\r\n\r\n// You can return `undefined` from the `by` function to revert to DOM order.\r\nexport default function sorter(arr, options) {\r\n  let opts = xtend(defaults, options);\r\n  let original = [].slice.call(arr);\r\n  let revert = false;\r\n\r\n  if (!arr.length) {\r\n    return [];\r\n  }\r\n\r\n  if (opts.randomize) {\r\n    return randomize(arr);\r\n  }\r\n\r\n  // Sort the elements by the opts.by function.\r\n  // If we don't have opts.by, default to DOM order\r\n  if (typeof opts.by === 'function') {\r\n    arr.sort(function (a, b) {\r\n\r\n      // Exit early if we already know we want to revert\r\n      if (revert) {\r\n        return 0;\r\n      }\r\n\r\n      let valA = opts.by(a[opts.key]);\r\n      let valB = opts.by(b[opts.key]);\r\n\r\n      // If both values are undefined, use the DOM order\r\n      if (valA === undefined && valB === undefined) {\r\n        revert = true;\r\n        return 0;\r\n      }\r\n\r\n      if (valA < valB || valA === 'sortFirst' || valB === 'sortLast') {\r\n        return -1;\r\n      }\r\n\r\n      if (valA > valB || valA === 'sortLast' || valB === 'sortFirst') {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  // Revert to the original array if necessary\r\n  if (revert) {\r\n    return original;\r\n  }\r\n\r\n  if (opts.reverse) {\r\n    arr.reverse();\r\n  }\r\n\r\n  return arr;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/sorter.js\n **/","'use strict';\r\n\r\nlet transitions = {};\r\nlet eventName = 'transitionend';\r\nlet count = 0;\r\n\r\nfunction uniqueId() {\r\n  return eventName + count++;\r\n}\r\n\r\nexport function onTransitionEnd(element, callback) {\r\n  let id = uniqueId();\r\n  let listener = (evt) => {\r\n    if (evt.currentTarget === evt.target) {\r\n      cancelTransitionEnd(id);\r\n      callback(evt);\r\n    }\r\n  };\r\n\r\n  element.addEventListener(eventName, listener);\r\n\r\n  transitions[id] = { element, listener };\r\n\r\n  return id;\r\n}\r\n\r\nexport function cancelTransitionEnd(id) {\r\n  if (transitions[id]) {\r\n    transitions[id].element.removeEventListener(eventName, transitions[id].listener);\r\n    transitions[id] = null;\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/on-transition-end.js\n **/","'use strict';\r\n\r\nimport Point from './point';\r\n\r\nfunction arrayMax(array) {\r\n  return Math.max.apply(Math, array);\r\n}\r\n\r\nfunction arrayMin(array) {\r\n  return Math.min.apply(Math, array);\r\n}\r\n\r\n/**\r\n * Determine the location of the next item, based on its size.\r\n * @param {Object} itemSize Object with width and height.\r\n * @param {Array.<number>} positions Positions of the other current items.\r\n * @param {number} gridSize The column width or row height.\r\n * @param {number} total The total number of columns or rows.\r\n * @param {number} threshold Buffer value for the column to fit.\r\n * @param {number} buffer Vertical buffer for the height of items.\r\n * @return {Point}\r\n */\r\nexport function getItemPosition({ itemSize, positions, gridSize, total, threshold, buffer }) {\r\n  var span = getColumnSpan(itemSize.width, gridSize, total, threshold);\r\n  var setY = getAvailablePositions(positions, span, total);\r\n  var shortColumnIndex = getShortColumn(setY, buffer);\r\n\r\n  // Position the item\r\n  var point = new Point(\r\n    Math.round(gridSize * shortColumnIndex),\r\n    Math.round(setY[shortColumnIndex]));\r\n\r\n  // Update the columns array with the new values for each column.\r\n  // e.g. before the update the columns could be [250, 0, 0, 0] for an item\r\n  // which spans 2 columns. After it would be [250, itemHeight, itemHeight, 0].\r\n  var setHeight = setY[shortColumnIndex] + itemSize.height;\r\n  for (var i = 0; i < span; i++) {\r\n    positions[shortColumnIndex + i] = setHeight;\r\n  }\r\n\r\n  return point;\r\n}\r\n\r\n/**\r\n * Determine the number of columns an items spans.\r\n * @param {number} itemWidth Width of the item.\r\n * @param {number} columnWidth Width of the column (includes gutter).\r\n * @param {number} columns Total number of columns\r\n * @param {number} threshold A buffer value for the size of the column to fit.\r\n * @return {number}\r\n */\r\nexport function getColumnSpan(itemWidth, columnWidth, columns, threshold) {\r\n  var columnSpan = itemWidth / columnWidth;\r\n\r\n  // If the difference between the rounded column span number and the\r\n  // calculated column span number is really small, round the number to\r\n  // make it fit.\r\n  if (Math.abs(Math.round(columnSpan) - columnSpan) < threshold) {\r\n    // e.g. columnSpan = 4.0089945390298745\r\n    columnSpan = Math.round(columnSpan);\r\n  }\r\n\r\n  // Ensure the column span is not more than the amount of columns in the whole layout.\r\n  return Math.min(Math.ceil(columnSpan), columns);\r\n}\r\n\r\n/**\r\n * Retrieves the column set to use for placement.\r\n * @param {number} columnSpan The number of columns this current item spans.\r\n * @param {number} columns The total columns in the grid.\r\n * @return {Array.<number>} An array of numbers represeting the column set.\r\n */\r\nexport function getAvailablePositions(positions, columnSpan, columns) {\r\n  // The item spans only one column.\r\n  if (columnSpan === 1) {\r\n    return positions;\r\n  }\r\n\r\n  // The item spans more than one column, figure out how many different\r\n  // places it could fit horizontally.\r\n  // The group count is the number of places within the positions this block\r\n  // could fit, ignoring the current positions of items.\r\n  // Imagine a 2 column brick as the second item in a 4 column grid with\r\n  // 10px height each. Find the places it would fit:\r\n  // [20, 10, 10, 0]\r\n  //  |   |   |\r\n  //  *   *   *\r\n  //\r\n  // Then take the places which fit and get the bigger of the two:\r\n  // max([20, 10]), max([10, 10]), max([10, 0]) = [20, 10, 0]\r\n  //\r\n  // Next, find the first smallest number (the short column).\r\n  // [20, 10, 0]\r\n  //          |\r\n  //          *\r\n  //\r\n  // And that's where it should be placed!\r\n  //\r\n  // Another example where the second column's item extends past the first:\r\n  // [10, 20, 10, 0] => [20, 20, 10] => 10\r\n  var available = [];\r\n\r\n  // For how many possible positions for this item there are.\r\n  for (var i = 0; i <= columns - columnSpan; i++) {\r\n    // Find the bigger value for each place it could fit.\r\n    available.push(arrayMax(positions.slice(i, i + columnSpan)));\r\n  }\r\n\r\n  return available;\r\n}\r\n\r\n/**\r\n * Find index of short column, the first from the left where this item will go.\r\n *\r\n * @param {Array.<number>} positions The array to search for the smallest number.\r\n * @param {number} buffer Optional buffer which is very useful when the height\r\n *     is a percentage of the width.\r\n * @return {number} Index of the short column.\r\n */\r\nexport function getShortColumn(positions, buffer) {\r\n  var minPosition = arrayMin(positions);\r\n  for (var i = 0, len = positions.length; i < len; i++) {\r\n    if (positions[i] >= minPosition - buffer && positions[i] <= minPosition + buffer) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/layout.js\n **/"],"sourceRoot":""}